swagger: '2.0'
info:
  version: v1.0
  title: AuthServer Admin API
  description: |
    Some points to understand before using this OpenAPI documentation:

    - Before making any requests, you must click the "Authorize" button below and enter two values:
      - the value for the Authorization header (defined by the application config's as-admin.staticToken property)
      - the value for the ApiVersion header (defined by the application config's elide.swagger.version property)

    - The OpenAPI documentation gives "string" as the type for "id" fields. However, this is due to a conversion taking place in the Elide framework. In fact, an integer value is required for all "id" fields.

    - The OpenAPI documentation generated and provided here is for OpenAPI v2.

    For more information about the OpenAPI specification, visit https://swagger.io/specification/v2

host: localhost:9091
basePath: /json-api
schemes: 
  - http
securityDefinitions:
  StaticToken:
    type: apiKey
    in: header
    name: Authorization
  Version:
    type: apiKey
    in: header
    name: ApiVersion
security:
  - StaticToken: []
  - Version: []
tags:
  - name: uma-client
  - name: resource-server
  - name: oauth-client
  - name: scope
  - name: wallet
  - name: requested-resources-capability-tickets
  - name: resource-definition
  - name: capability-ticket
  - name: requested-resource
  - name: resource
  - name: oauth-provider
  - name: purpose
  - name: oauth-client-metadata
  - name: language-translation
paths:
  /uma-client/{uma-clientId}/capabilityTickets:
    get:
      tags:
        - capability-ticket
      description: Returns the relationship capabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - ticketId
              - '-ticketId'
              - ticketName
              - '-ticketName'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - ticketId
              - ticketName
              - version
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: filter[capability-ticket]
          in: query
          description: Filters the collection of capability-ticket using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - capability-ticket
      description: Creates an item of type capability-ticket and adds it to capabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/capabilityTickets/{capability-ticketId}:
    get:
      tags:
        - capability-ticket
      description: Returns an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - ticketId
              - ticketName
              - version
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - capability-ticket
      description: Deletes an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - capability-ticket
      description: Modifies an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/relationships/capabilityTickets:
    get:
      tags:
        - capability-ticket
      description: Returns the relationship identifiers for capabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[capability-ticket]
          in: query
          description: Filters the collection of capability-ticket using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - capability-ticket
    post:
      tags:
        - capability-ticket
      description: Adds items to the relationship capabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - capability-ticket
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - capability-ticket
    delete:
      tags:
        - capability-ticket
      description: Deletes items from the relationship capabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - capability-ticket
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - capability-ticket
      description: Replaces the relationship capabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - capability-ticket
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /requested-resources-capability-tickets:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns the collection of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resources-capability-tickets]
          in: query
          description: Selects the set of requested-resources-capability-tickets fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: filter[requested-resources-capability-tickets]
          in: query
          description: Filters the collection of requested-resources-capability-tickets using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of requested-resources-capability-tickets using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resources-capability-tickets'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resources-capability-tickets
      description: Creates an item of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resources-capability-tickets
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resources-capability-tickets]
          in: query
          description: Selects the set of requested-resources-capability-tickets fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resources-capability-tickets
      description: Deletes an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resources-capability-tickets
      description: Modifies an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resources-capability-tickets
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/scopes:
    get:
      tags:
        - scope
      description: Returns the relationship scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - dType
              - '-dType'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[scope]
          in: query
          description: Selects the set of scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - dType
              - iconUri
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[scope]
          in: query
          description: Filters the collection of scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - scope
      description: Creates an item of type scope and adds it to scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/scope'
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/scopes/{scopeId}:
    get:
      tags:
        - scope
      description: Returns an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[scope]
          in: query
          description: Selects the set of scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - dType
              - iconUri
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - scope
      description: Deletes an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - scope
      description: Modifies an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/scope'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
      - name: scopeId
        in: path
        description: scope Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/relationships/scopes:
    get:
      tags:
        - scope
      description: Returns the relationship identifiers for scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[scope]
          in: query
          description: Filters the collection of scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
    post:
      tags:
        - scope
      description: Adds items to the relationship scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
    delete:
      tags:
        - scope
      description: Deletes items from the relationship scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - scope
      description: Replaces the relationship scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /oauth-client:
    get:
      tags:
        - oauth-client
      description: Returns the collection of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - '-clientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
  /oauth-client/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /requested-resource:
    get:
      tags:
        - requested-resource
      description: Returns the collection of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceId
              - '-requestedResourceId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of requested-resource using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resource
      description: Creates an item of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
  /requested-resource/{requested-resourceId}:
    get:
      tags:
        - requested-resource
      description: Returns an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resource
      description: Deletes an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resource
      description: Modifies an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /resource/{resourceId}/resourceServer:
    get:
      tags:
        - resource-server
      description: Returns the relationship resourceServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - name
              - '-name'
              - resourceServerId
              - '-resourceServerId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-server]
          in: query
          description: Selects the set of resource-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - lastUpdated
              - name
              - resourceServerId
              - version
              - oAuthClient
              - resources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClient
              - resources
          collectionFormat: csv
        - name: filter[resource-server]
          in: query
          description: Filters the collection of resource-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-server
      description: Creates an item of type resource-server and adds it to resourceServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-server'
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /resource/{resourceId}/resourceServer/{resource-serverId}:
    get:
      tags:
        - resource-server
      description: Returns an instance of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-server]
          in: query
          description: Selects the set of resource-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - lastUpdated
              - name
              - resourceServerId
              - version
              - oAuthClient
              - resources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClient
              - resources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-server
      description: Deletes an instance of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-server
      description: Modifies an instance of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
  /resource/{resourceId}/relationships/resourceServer:
    get:
      tags:
        - resource-server
      description: Returns the relationship identifiers for resourceServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-server]
          in: query
          description: Filters the collection of resource-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-server
    patch:
      tags:
        - resource-server
      description: Replaces the relationship resourceServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-server
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/umaClient:
    get:
      tags:
        - uma-client
      description: Returns the relationship umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - iconUrl
              - '-iconUrl'
              - name
              - '-name'
              - policyUrl
              - '-policyUrl'
              - tosUrl
              - '-tosUrl'
              - umaClientId
              - '-umaClientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[uma-client]
          in: query
          description: Selects the set of uma-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - iconUrl
              - lastUpdated
              - name
              - policyUrl
              - tosUrl
              - umaClientId
              - version
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: filter[uma-client]
          in: query
          description: Filters the collection of uma-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/uma-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - uma-client
      description: Creates an item of type uma-client and adds it to umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: uma-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/uma-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/uma-client'
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/umaClient/{uma-clientId}:
    get:
      tags:
        - uma-client
      description: Returns an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[uma-client]
          in: query
          description: Selects the set of uma-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - iconUrl
              - lastUpdated
              - name
              - policyUrl
              - tosUrl
              - umaClientId
              - version
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/uma-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - uma-client
      description: Deletes an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - uma-client
      description: Modifies an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: uma-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/uma-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/relationships/umaClient:
    get:
      tags:
        - uma-client
      description: Returns the relationship identifiers for umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[uma-client]
          in: query
          description: Filters the collection of uma-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - uma-client
    patch:
      tags:
        - uma-client
      description: Replaces the relationship umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - uma-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/requestedResourceCapabilityTickets:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resources-capability-tickets]
          in: query
          description: Selects the set of requested-resources-capability-tickets fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: filter[requested-resources-capability-tickets]
          in: query
          description: Filters the collection of requested-resources-capability-tickets using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resources-capability-tickets'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resources-capability-tickets
      description: Creates an item of type requested-resources-capability-tickets and adds it to requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resources-capability-tickets
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/requestedResourceCapabilityTickets/{requested-resources-capability-ticketsId}:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resources-capability-tickets]
          in: query
          description: Selects the set of requested-resources-capability-tickets fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resources-capability-tickets
      description: Deletes an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resources-capability-tickets
      description: Modifies an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resources-capability-tickets
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/relationships/requestedResourceCapabilityTickets:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns the relationship identifiers for requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[requested-resources-capability-tickets]
          in: query
          description: Filters the collection of requested-resources-capability-tickets using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
    post:
      tags:
        - requested-resources-capability-tickets
      description: Adds items to the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
    delete:
      tags:
        - requested-resources-capability-tickets
      description: Deletes items from the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resources-capability-tickets
      description: Replaces the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /resource/{resourceId}/allowedScopes:
    get:
      tags:
        - scope
      description: Returns the relationship allowedScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - dType
              - '-dType'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[scope]
          in: query
          description: Selects the set of scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - dType
              - iconUri
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[scope]
          in: query
          description: Filters the collection of scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - scope
      description: Creates an item of type scope and adds it to allowedScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/scope'
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /resource/{resourceId}/allowedScopes/{scopeId}:
    get:
      tags:
        - scope
      description: Returns an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[scope]
          in: query
          description: Selects the set of scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - dType
              - iconUri
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - scope
      description: Deletes an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - scope
      description: Modifies an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/scope'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
      - name: scopeId
        in: path
        description: scope Identifier
        required: true
        type: string
  /resource/{resourceId}/relationships/allowedScopes:
    get:
      tags:
        - scope
      description: Returns the relationship identifiers for allowedScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[scope]
          in: query
          description: Filters the collection of scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
    post:
      tags:
        - scope
      description: Adds items to the relationship allowedScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
    delete:
      tags:
        - scope
      description: Deletes items from the relationship allowedScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - scope
      description: Replaces the relationship allowedScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - scope
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /wallet/{walletId}/oAuthProvider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship oAuthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - dateCreated
              - jwksRaw
              - jwksUri
              - lastUpdated
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider and adds it to oAuthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
  /wallet/{walletId}/oAuthProvider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - dateCreated
              - jwksRaw
              - jwksUri
              - lastUpdated
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /wallet/{walletId}/relationships/oAuthProvider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship identifiers for oAuthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
    patch:
      tags:
        - oauth-provider
      description: Replaces the relationship oAuthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
      responses:
        '204':
          description: Successful response
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
  /language-translation:
    get:
      tags:
        - language-translation
      description: Returns the collection of type language-translation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - locale
              - '-locale'
              - messageContent
              - '-messageContent'
              - messageKey
              - '-messageKey'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[language-translation]
          in: query
          description: Selects the set of language-translation fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - locale
              - messageContent
              - messageKey
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[language-translation]
          in: query
          description: Filters the collection of language-translation using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of language-translation using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/language-translation'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - language-translation
      description: Creates an item of type language-translation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: language-translation
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/language-translation'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/language-translation'
  /language-translation/{language-translationId}:
    get:
      tags:
        - language-translation
      description: Returns an instance of type language-translation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[language-translation]
          in: query
          description: Selects the set of language-translation fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - locale
              - messageContent
              - messageKey
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/language-translation'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - language-translation
      description: Deletes an instance of type language-translation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - language-translation
      description: Modifies an instance of type language-translation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: language-translation
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/language-translation'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: language-translationId
        in: path
        description: language-translation Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/requestedResourceCapabilityTickets:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resources-capability-tickets]
          in: query
          description: Selects the set of requested-resources-capability-tickets fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: filter[requested-resources-capability-tickets]
          in: query
          description: Filters the collection of requested-resources-capability-tickets using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resources-capability-tickets'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resources-capability-tickets
      description: Creates an item of type requested-resources-capability-tickets and adds it to requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resources-capability-tickets
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/requestedResourceCapabilityTickets/{requested-resources-capability-ticketsId}:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resources-capability-tickets]
          in: query
          description: Selects the set of requested-resources-capability-tickets fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
              - requestedResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resources-capability-tickets
      description: Deletes an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resources-capability-tickets
      description: Modifies an instance of type requested-resources-capability-tickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resources-capability-tickets
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resources-capability-tickets'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/relationships/requestedResourceCapabilityTickets:
    get:
      tags:
        - requested-resources-capability-tickets
      description: Returns the relationship identifiers for requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[requested-resources-capability-tickets]
          in: query
          description: Filters the collection of requested-resources-capability-tickets using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
    post:
      tags:
        - requested-resources-capability-tickets
      description: Adds items to the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
    delete:
      tags:
        - requested-resources-capability-tickets
      description: Deletes items from the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resources-capability-tickets
      description: Replaces the relationship requestedResourceCapabilityTickets
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resources-capability-tickets
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /uma-client:
    get:
      tags:
        - uma-client
      description: Returns the collection of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - iconUrl
              - '-iconUrl'
              - name
              - '-name'
              - policyUrl
              - '-policyUrl'
              - tosUrl
              - '-tosUrl'
              - umaClientId
              - '-umaClientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[uma-client]
          in: query
          description: Selects the set of uma-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - iconUrl
              - lastUpdated
              - name
              - policyUrl
              - tosUrl
              - umaClientId
              - version
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: filter[uma-client]
          in: query
          description: Filters the collection of uma-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of uma-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/uma-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - uma-client
      description: Creates an item of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: uma-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/uma-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/uma-client'
  /uma-client/{uma-clientId}:
    get:
      tags:
        - uma-client
      description: Returns an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[uma-client]
          in: query
          description: Selects the set of uma-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - iconUrl
              - lastUpdated
              - name
              - policyUrl
              - tosUrl
              - umaClientId
              - version
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/uma-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - uma-client
      description: Deletes an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - uma-client
      description: Modifies an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: uma-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/uma-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}/requestedResource:
    get:
      tags:
        - requested-resource
      description: Returns the relationship requestedResource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceId
              - '-requestedResourceId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resource
      description: Creates an item of type requested-resource and adds it to requestedResource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}/requestedResource/{requested-resourceId}:
    get:
      tags:
        - requested-resource
      description: Returns an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resource
      description: Deletes an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resource
      description: Modifies an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}/relationships/requestedResource:
    get:
      tags:
        - requested-resource
      description: Returns the relationship identifiers for requestedResource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resource
    patch:
      tags:
        - requested-resource
      description: Replaces the relationship requestedResource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/requestedResources:
    get:
      tags:
        - requested-resource
      description: Returns the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceId
              - '-requestedResourceId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resource
      description: Creates an item of type requested-resource and adds it to requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/requestedResources/{requested-resourceId}:
    get:
      tags:
        - requested-resource
      description: Returns an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resource
      description: Deletes an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resource
      description: Modifies an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/relationships/requestedResources:
    get:
      tags:
        - requested-resource
      description: Returns the relationship identifiers for requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
    post:
      tags:
        - requested-resource
      description: Adds items to the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
    delete:
      tags:
        - requested-resource
      description: Deletes items from the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resource
      description: Replaces the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /resource-server/{resource-serverId}/oAuthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - '-clientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client and adds it to oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
  /resource-server/{resource-serverId}/oAuthClient/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /resource-server/{resource-serverId}/relationships/oAuthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship identifiers for oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
    patch:
      tags:
        - oauth-client
      description: Replaces the relationship oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
  /oauth-client-metadata:
    get:
      tags:
        - oauth-client-metadata
      description: Returns the collection of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - clientAuthenticationType
              - '-clientAuthenticationType'
              - grantTypes
              - '-grantTypes'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - scopes
              - '-scopes'
              - secret
              - '-secret'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientAuthenticationType
              - clientType
              - dateCreated
              - grantTypes
              - jwksRaw
              - jwksUri
              - lastUpdated
              - scopes
              - secret
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-client-metadata]
          in: query
          description: Filters the collection of oauth-client-metadata using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-client-metadata using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client-metadata
      description: Creates an item of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
  /oauth-client-metadata/{oauth-client-metadataId}:
    get:
      tags:
        - oauth-client-metadata
      description: Returns an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientAuthenticationType
              - clientType
              - dateCreated
              - grantTypes
              - jwksRaw
              - jwksUri
              - lastUpdated
              - scopes
              - secret
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client-metadata
      description: Deletes an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client-metadata
      description: Modifies an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-client-metadataId
        in: path
        description: oauth-client-metadata Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/umaClient:
    get:
      tags:
        - uma-client
      description: Returns the relationship umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - iconUrl
              - '-iconUrl'
              - name
              - '-name'
              - policyUrl
              - '-policyUrl'
              - tosUrl
              - '-tosUrl'
              - umaClientId
              - '-umaClientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[uma-client]
          in: query
          description: Selects the set of uma-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - iconUrl
              - lastUpdated
              - name
              - policyUrl
              - tosUrl
              - umaClientId
              - version
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: filter[uma-client]
          in: query
          description: Filters the collection of uma-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/uma-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - uma-client
      description: Creates an item of type uma-client and adds it to umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: uma-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/uma-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/uma-client'
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/umaClient/{uma-clientId}:
    get:
      tags:
        - uma-client
      description: Returns an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[uma-client]
          in: query
          description: Selects the set of uma-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - iconUrl
              - lastUpdated
              - name
              - policyUrl
              - tosUrl
              - umaClientId
              - version
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTickets
              - oauthClient
              - requestedResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/uma-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - uma-client
      description: Deletes an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - uma-client
      description: Modifies an instance of type uma-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: uma-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/uma-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/relationships/umaClient:
    get:
      tags:
        - uma-client
      description: Returns the relationship identifiers for umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[uma-client]
          in: query
          description: Filters the collection of uma-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - uma-client
    patch:
      tags:
        - uma-client
      description: Replaces the relationship umaClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - uma-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/purpose:
    get:
      tags:
        - purpose
      description: Returns the relationship purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[purpose]
          in: query
          description: Selects the set of purpose fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[purpose]
          in: query
          description: Filters the collection of purpose using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/purpose'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - purpose
      description: Creates an item of type purpose and adds it to purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: purpose
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/purpose'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/purpose'
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/purpose/{purposeId}:
    get:
      tags:
        - purpose
      description: Returns an instance of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[purpose]
          in: query
          description: Selects the set of purpose fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/purpose'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - purpose
      description: Deletes an instance of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - purpose
      description: Modifies an instance of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: purpose
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/purpose'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
      - name: purposeId
        in: path
        description: purpose Identifier
        required: true
        type: string
  /capability-ticket/{capability-ticketId}/relationships/purpose:
    get:
      tags:
        - purpose
      description: Returns the relationship identifiers for purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[purpose]
          in: query
          description: Filters the collection of purpose using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - purpose
    patch:
      tags:
        - purpose
      description: Replaces the relationship purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - purpose
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /resource-server/{resource-serverId}/resources:
    get:
      tags:
        - resource
      description: Returns the relationship resources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceId
              - '-resourceId'
              - resourceLocation
              - '-resourceLocation'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource]
          in: query
          description: Selects the set of resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - resourceId
              - resourceLocation
              - version
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
        - name: filter[resource]
          in: query
          description: Filters the collection of resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource
      description: Creates an item of type resource and adds it to resources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource'
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
  /resource-server/{resource-serverId}/resources/{resourceId}:
    get:
      tags:
        - resource
      description: Returns an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource]
          in: query
          description: Selects the set of resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - resourceId
              - resourceLocation
              - version
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource
      description: Deletes an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource
      description: Modifies an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /resource-server/{resource-serverId}/relationships/resources:
    get:
      tags:
        - resource
      description: Returns the relationship identifiers for resources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource]
          in: query
          description: Filters the collection of resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource
    post:
      tags:
        - resource
      description: Adds items to the relationship resources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource
    delete:
      tags:
        - resource
      description: Deletes items from the relationship resources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource
      description: Replaces the relationship resources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
  /resource-server:
    get:
      tags:
        - resource-server
      description: Returns the collection of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - name
              - '-name'
              - resourceServerId
              - '-resourceServerId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-server]
          in: query
          description: Selects the set of resource-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - lastUpdated
              - name
              - resourceServerId
              - version
              - oAuthClient
              - resources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClient
              - resources
          collectionFormat: csv
        - name: filter[resource-server]
          in: query
          description: Filters the collection of resource-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-server using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-server
      description: Creates an item of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-server'
  /resource-server/{resource-serverId}:
    get:
      tags:
        - resource-server
      description: Returns an instance of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-server]
          in: query
          description: Selects the set of resource-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - dateCreated
              - lastUpdated
              - name
              - resourceServerId
              - version
              - oAuthClient
              - resources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClient
              - resources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-server
      description: Deletes an instance of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-server
      description: Modifies an instance of type resource-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-serverId
        in: path
        description: resource-server Identifier
        required: true
        type: string
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}/capabilityTicket:
    get:
      tags:
        - capability-ticket
      description: Returns the relationship capabilityTicket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - ticketId
              - '-ticketId'
              - ticketName
              - '-ticketName'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - ticketId
              - ticketName
              - version
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: filter[capability-ticket]
          in: query
          description: Filters the collection of capability-ticket using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - capability-ticket
      description: Creates an item of type capability-ticket and adds it to capabilityTicket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}/capabilityTicket/{capability-ticketId}:
    get:
      tags:
        - capability-ticket
      description: Returns an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - ticketId
              - ticketName
              - version
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - capability-ticket
      description: Deletes an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - capability-ticket
      description: Modifies an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /requested-resources-capability-tickets/{requested-resources-capability-ticketsId}/relationships/capabilityTicket:
    get:
      tags:
        - capability-ticket
      description: Returns the relationship identifiers for capabilityTicket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[capability-ticket]
          in: query
          description: Filters the collection of capability-ticket using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - capability-ticket
    patch:
      tags:
        - capability-ticket
      description: Replaces the relationship capabilityTicket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - capability-ticket
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resources-capability-ticketsId
        in: path
        description: requested-resources-capability-tickets Identifier
        required: true
        type: string
  /resource:
    get:
      tags:
        - resource
      description: Returns the collection of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceId
              - '-resourceId'
              - resourceLocation
              - '-resourceLocation'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource]
          in: query
          description: Selects the set of resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - resourceId
              - resourceLocation
              - version
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
        - name: filter[resource]
          in: query
          description: Filters the collection of resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource
      description: Creates an item of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource'
  /resource/{resourceId}:
    get:
      tags:
        - resource
      description: Returns an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource]
          in: query
          description: Selects the set of resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - resourceId
              - resourceLocation
              - version
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - allowedScopes
              - resourceDefinition
              - resourceServer
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource
      description: Deletes an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource
      description: Modifies an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/resourceDefinition:
    get:
      tags:
        - resource-definition
      description: Returns the relationship resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - resourceId
              - '-resourceId'
              - type
              - '-type'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - iconUri
              - lastUpdated
              - maxPermissionDuration
              - name
              - resourceId
              - type
              - version
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition and adds it to resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/resourceDefinition/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - iconUri
              - lastUpdated
              - maxPermissionDuration
              - name
              - resourceId
              - type
              - version
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResources
              - scopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /requested-resource/{requested-resourceId}/relationships/resourceDefinition:
    get:
      tags:
        - resource-definition
      description: Returns the relationship identifiers for resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
    patch:
      tags:
        - resource-definition
      description: Replaces the relationship resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
      responses:
        '204':
          description: Successful response
    parameters:
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /purpose:
    get:
      tags:
        - purpose
      description: Returns the collection of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[purpose]
          in: query
          description: Selects the set of purpose fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[purpose]
          in: query
          description: Filters the collection of purpose using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of purpose using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/purpose'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - purpose
      description: Creates an item of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: purpose
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/purpose'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/purpose'
  /purpose/{purposeId}:
    get:
      tags:
        - purpose
      description: Returns an instance of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[purpose]
          in: query
          description: Selects the set of purpose fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/purpose'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - purpose
      description: Deletes an instance of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - purpose
      description: Modifies an instance of type purpose
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: purpose
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/purpose'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: purposeId
        in: path
        description: purpose Identifier
        required: true
        type: string
  /oauth-client/{oauth-clientId}/oAuthClientMetaData:
    get:
      tags:
        - oauth-client-metadata
      description: Returns the relationship oAuthClientMetaData
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - clientAuthenticationType
              - '-clientAuthenticationType'
              - grantTypes
              - '-grantTypes'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - scopes
              - '-scopes'
              - secret
              - '-secret'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientAuthenticationType
              - clientType
              - dateCreated
              - grantTypes
              - jwksRaw
              - jwksUri
              - lastUpdated
              - scopes
              - secret
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-client-metadata]
          in: query
          description: Filters the collection of oauth-client-metadata using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client-metadata
      description: Creates an item of type oauth-client-metadata and adds it to oAuthClientMetaData
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /oauth-client/{oauth-clientId}/oAuthClientMetaData/{oauth-client-metadataId}:
    get:
      tags:
        - oauth-client-metadata
      description: Returns an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientAuthenticationType
              - clientType
              - dateCreated
              - grantTypes
              - jwksRaw
              - jwksUri
              - lastUpdated
              - scopes
              - secret
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client-metadata
      description: Deletes an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client-metadata
      description: Modifies an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
      - name: oauth-client-metadataId
        in: path
        description: oauth-client-metadata Identifier
        required: true
        type: string
  /oauth-client/{oauth-clientId}/relationships/oAuthClientMetaData:
    get:
      tags:
        - oauth-client-metadata
      description: Returns the relationship identifiers for oAuthClientMetaData
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-client-metadata]
          in: query
          description: Filters the collection of oauth-client-metadata using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client-metadata
    patch:
      tags:
        - oauth-client-metadata
      description: Replaces the relationship oAuthClientMetaData
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client-metadata
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /wallet:
    get:
      tags:
        - wallet
      description: Returns the collection of type wallet
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - optionColour
              - '-optionColour'
              - optionImg
              - '-optionImg'
              - walletId
              - '-walletId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[wallet]
          in: query
          description: Selects the set of wallet fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - name
              - optionColour
              - optionImg
              - version
              - walletId
              - oAuthClient
              - oAuthProvider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClient
              - oAuthProvider
          collectionFormat: csv
        - name: filter[wallet]
          in: query
          description: Filters the collection of wallet using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of wallet using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/wallet'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - wallet
      description: Creates an item of type wallet
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: wallet
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/wallet'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/wallet'
  /wallet/{walletId}:
    get:
      tags:
        - wallet
      description: Returns an instance of type wallet
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[wallet]
          in: query
          description: Selects the set of wallet fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - name
              - optionColour
              - optionImg
              - version
              - walletId
              - oAuthClient
              - oAuthProvider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClient
              - oAuthProvider
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/wallet'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - wallet
      description: Deletes an instance of type wallet
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - wallet
      description: Modifies an instance of type wallet
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: wallet
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/wallet'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
  /capability-ticket:
    get:
      tags:
        - capability-ticket
      description: Returns the collection of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - ticketId
              - '-ticketId'
              - ticketName
              - '-ticketName'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - ticketId
              - ticketName
              - version
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: filter[capability-ticket]
          in: query
          description: Filters the collection of capability-ticket using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of capability-ticket using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - capability-ticket
      description: Creates an item of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
  /capability-ticket/{capability-ticketId}:
    get:
      tags:
        - capability-ticket
      description: Returns an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - ticketId
              - ticketName
              - version
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - purpose
              - requestedResourceCapabilityTickets
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - capability-ticket
      description: Deletes an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - capability-ticket
      description: Modifies an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /oauth-provider:
    get:
      tags:
        - oauth-provider
      description: Returns the collection of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - dateCreated
              - jwksRaw
              - jwksUri
              - lastUpdated
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-provider using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
  /oauth-provider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - dateCreated
              - jwksRaw
              - jwksUri
              - lastUpdated
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /resource/{resourceId}/resourceDefinition:
    get:
      tags:
        - resource-definition
      description: Returns the relationship resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - resourceId
              - '-resourceId'
              - type
              - '-type'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - iconUri
              - lastUpdated
              - maxPermissionDuration
              - name
              - resourceId
              - type
              - version
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition and adds it to resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /resource/{resourceId}/resourceDefinition/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - iconUri
              - lastUpdated
              - maxPermissionDuration
              - name
              - resourceId
              - type
              - version
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResources
              - scopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource/{resourceId}/relationships/resourceDefinition:
    get:
      tags:
        - resource-definition
      description: Returns the relationship identifiers for resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
    patch:
      tags:
        - resource-definition
      description: Replaces the relationship resourceDefinition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/oauthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - '-clientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client and adds it to oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/oauthClient/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /uma-client/{uma-clientId}/relationships/oauthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship identifiers for oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
    patch:
      tags:
        - oauth-client
      description: Replaces the relationship oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: uma-clientId
        in: path
        description: uma-client Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/requestedResources:
    get:
      tags:
        - requested-resource
      description: Returns the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceId
              - '-requestedResourceId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - requested-resource
      description: Creates an item of type requested-resource and adds it to requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/requestedResources/{requested-resourceId}:
    get:
      tags:
        - requested-resource
      description: Returns an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[requested-resource]
          in: query
          description: Selects the set of requested-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - lastUpdated
              - maxPermissionDuration
              - requestedResourceId
              - version
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResourceCapabilityTickets
              - resourceDefinition
              - umaClient
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/requested-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - requested-resource
      description: Deletes an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resource
      description: Modifies an instance of type requested-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: requested-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/requested-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
      - name: requested-resourceId
        in: path
        description: requested-resource Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/relationships/requestedResources:
    get:
      tags:
        - requested-resource
      description: Returns the relationship identifiers for requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[requested-resource]
          in: query
          description: Filters the collection of requested-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
    post:
      tags:
        - requested-resource
      description: Adds items to the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
    delete:
      tags:
        - requested-resource
      description: Deletes items from the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - requested-resource
      description: Replaces the relationship requestedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - requested-resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /scope:
    get:
      tags:
        - scope
      description: Returns the collection of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - dType
              - '-dType'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[scope]
          in: query
          description: Selects the set of scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - dType
              - iconUri
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[scope]
          in: query
          description: Filters the collection of scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of scope using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - scope
      description: Creates an item of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/scope'
  /scope/{scopeId}:
    get:
      tags:
        - scope
      description: Returns an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[scope]
          in: query
          description: Selects the set of scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - dType
              - iconUri
              - lastUpdated
              - name
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - scope
      description: Deletes an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - scope
      description: Modifies an instance of type scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/scope'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: scopeId
        in: path
        description: scope Identifier
        required: true
        type: string
  /wallet/{walletId}/oAuthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - '-clientId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client and adds it to oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
  /wallet/{walletId}/oAuthClient/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - dateCreated
              - lastUpdated
              - redirectUris
              - version
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /wallet/{walletId}/relationships/oAuthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship identifiers for oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
    patch:
      tags:
        - oauth-client
      description: Replaces the relationship oAuthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: walletId
        in: path
        description: wallet Identifier
        required: true
        type: string
  /resource-definition:
    get:
      tags:
        - resource-definition
      description: Returns the collection of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - resourceId
              - '-resourceId'
              - type
              - '-type'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - iconUri
              - lastUpdated
              - maxPermissionDuration
              - name
              - resourceId
              - type
              - version
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-definition using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
  /resource-definition/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dateCreated
              - description
              - iconUri
              - lastUpdated
              - maxPermissionDuration
              - name
              - resourceId
              - type
              - version
              - requestedResources
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requestedResources
              - scopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
definitions:
  language-translation:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          locale:
            type: string
          messageContent:
            type: string
          messageKey:
            type: string
          version:
            type: integer
            format: int64
      relationships:
        type: object
  wallet:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          name:
            type: string
          optionColour:
            type: string
          optionImg:
            type: string
          version:
            type: integer
            format: int64
          walletId:
            type: string
          disabledOn : 
            type: string
            format: date-time
      relationships:
        type: object
        properties:
          oAuthClient:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
          oAuthProvider:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
  requested-resources-capability-tickets:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          version:
            type: integer
            format: int64
      relationships:
        type: object
        properties:
          capabilityTicket:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - capability-ticket
          requestedResource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resource
  resource:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          maxPermissionDuration:
            type: integer
            format: int64
          resourceId:
            type: string
          resourceLocation:
            type: string
          version:
            type: integer
            format: int64
          disabledOn : 
            type: string
            format: date-time
      relationships:
        type: object
        properties:
          allowedScopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - scope
          resourceDefinition:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
          resourceServer:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-server
  oauth-provider:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          baseUrl:
            type: string
          clientId:
            type: string
          clientSecret:
            type: string
          dateCreated:
            type: string
            format: date-time
          jwksRaw:
            type: string
          jwksUri:
            type: string
          lastUpdated:
            type: string
            format: date-time
          version:
            type: integer
            format: int64
      relationships:
        type: object
  purpose:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          name:
            type: string
          version:
            type: integer
            format: int64
      relationships:
        type: object
  oauth-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          clientId:
            type: string
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          redirectUris:
            type: array
            uniqueItems: true
            items:
              type: object
          version:
            type: integer
            format: int64
      relationships:
        type: object
        properties:
          oAuthClientMetaData:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client-metadata
  capability-ticket:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          ticketId:
            type: string
          ticketName:
            type: string
          version:
            type: integer
            format: int64
      relationships:
        type: object
        properties:
          purpose:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - purpose
          requestedResourceCapabilityTickets:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resources-capability-tickets
          umaClient:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - uma-client
  requested-resource:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          maxPermissionDuration:
            type: integer
            format: int64
          requestedResourceId:
            type: string
          version:
            type: integer
            format: int64
          disabledOn : 
            type: string
            format: date-time
      relationships:
        type: object
        properties:
          requestedResourceCapabilityTickets:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resources-capability-tickets
          resourceDefinition:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
          umaClient:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - uma-client
  scope:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dType:
            type: string
          dateCreated:
            type: string
            format: date-time
          description:
            type: string
          iconUri:
            type: string
          lastUpdated:
            type: string
            format: date-time
          name:
            type: string
          version:
            type: integer
            format: int64
      relationships:
        type: object
  resource-definition:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          dateCreated:
            type: string
            format: date-time
          description:
            type: string
          iconUri:
            type: string
          lastUpdated:
            type: string
            format: date-time
          maxPermissionDuration:
            type: integer
            format: int64
          name:
            type: string
          resourceId:
            type: string
          type:
            type: string
          version:
            type: integer
            format: int64
      relationships:
        type: object
        properties:
          requestedResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resource
          scopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - scope
  resource-server:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          baseUrl:
            type: string
          dateCreated:
            type: string
            format: date-time
          lastUpdated:
            type: string
            format: date-time
          name:
            type: string
          resourceServerId:
            type: string
          version:
            type: integer
            format: int64
          disabledOn : 
            type: string
            format: date-time
      relationships:
        type: object
        properties:
          oAuthClient:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
          resources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource
  uma-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          baseUrl:
            type: string
          dateCreated:
            type: string
            format: date-time
          iconUrl:
            type: string
          lastUpdated:
            type: string
            format: date-time
          name:
            type: string
          policyUrl:
            type: string
          tosUrl:
            type: string
          umaClientId:
            type: string
          version:
            type: integer
            format: int64
          disabledOn : 
            type: string
            format: date-time
      relationships:
        type: object
        properties:
          capabilityTickets:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - capability-ticket
          oauthClient:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
          requestedResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - requested-resource
  oauth-client-metadata:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          baseUrl:
            type: string
          clientAuthenticationType:
            type: string
          clientType:
            type: string
            enum:
              - CONFIDENTIAL
              - PUBLIC
          dateCreated:
            type: string
            format: date-time
          grantTypes:
            type: string
          jwksRaw:
            type: string
          jwksUri:
            type: string
          lastUpdated:
            type: string
            format: date-time
          scopes:
            type: string
          secret:
            type: string
          version:
            type: integer
            format: int64
      relationships:
        type: object
