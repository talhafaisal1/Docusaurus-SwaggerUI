swagger: '2.0'
info:
  version: v1.0
  title: Wallet Admin API
  description: |
    Some points to understand before using this OpenAPI documentation:

    - Before making any requests, you must click the "Authorize" button below and enter two values:
      - the value for the Authorization header (defined by the application config's wallet-admin.staticToken property)
      - the value for the ApiVersion header (defined by the application config's elide.swagger.version property)

    - The OpenAPI documentation gives "string" as the type for "id" fields. However, this is due to a conversion taking place in the Elide framework. In fact, an integer value is required for all "id" fields.

    - The OpenAPI documentation generated and provided here is for OpenAPI v2.

    For more information about the OpenAPI specification, visit https://swagger.io/specification/v2

host: localhost:9094
basePath: /json-api
schemes:
  - http
securityDefinitions:
  StaticToken:
    type: apiKey
    in: header
    name: Authorization
  Version:
    type: apiKey
    in: header
    name: ApiVersion
security:
  - StaticToken: []
  - Version: []
tags:
  - name: authorization-server
  - name: organization
  - name: oauth-client
  - name: oauth-provider
  - name: oauth-provider-custom-scopes
  - name: resource-type
  - name: resource-scope
  - name: resource-definition
  - name: data-source
  - name: required-data-source
  - name: enrolled-rs
  - name: idp-authenticator
  - name: rs-resource
  - name: enrolled-client
  - name: verifiable-credential-stakeholder
paths:
  /authorization-server:
    get:
      tags:
        - authorization-server
      description: Returns the collection of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of authorization-server using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authorization-server
      description: Creates an item of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
  /authorization-server/{authorization-serverId}:
    get:
      tags:
        - authorization-server
      description: Returns an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authorization-server
      description: Deletes an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authorization-server
      description: Modifies an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - '-logoUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - data-source
      description: Creates an item of type data-source and adds it to dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/dataSource/{data-sourceId}:
    get:
      tags:
        - data-source
      description: Returns an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - data-source
      description: Deletes an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Modifies an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/relationships/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship identifiers for dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
    patch:
      tags:
        - data-source
      description: Replaces the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /organization/{organizationId}/authorizationServers:
    get:
      tags:
        - authorization-server
      description: Returns the relationship authorizationServers
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authorization-server
      description: Creates an item of type authorization-server and adds it to authorizationServers
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/authorizationServers/{authorization-serverId}:
    get:
      tags:
        - authorization-server
      description: Returns an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authorization-server
      description: Deletes an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authorization-server
      description: Modifies an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/authorizationServers:
    get:
      tags:
        - authorization-server
      description: Returns the relationship identifiers for authorizationServers
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - authorization-server
    post:
      tags:
        - authorization-server
      description: Adds items to the relationship authorizationServers
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - authorization-server
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - authorization-server
    delete:
      tags:
        - authorization-server
      description: Deletes items from the relationship authorizationServers
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - authorization-server
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authorization-server
      description: Replaces the relationship authorizationServers
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - authorization-server
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /resource-type/{resource-typeId}/resourceDefinitions:
    get:
      tags:
        - resource-definition
      description: Returns the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - informationUri
              - '-informationUri'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition and adds it to resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
    parameters:
      - name: resource-typeId
        in: path
        description: resource-type Identifier
        required: true
        type: string
  /resource-type/{resource-typeId}/resourceDefinitions/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-typeId
        in: path
        description: resource-type Identifier
        required: true
        type: string
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-type/{resource-typeId}/relationships/resourceDefinitions:
    get:
      tags:
        - resource-definition
      description: Returns the relationship identifiers for resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
    post:
      tags:
        - resource-definition
      description: Adds items to the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
    delete:
      tags:
        - resource-definition
      description: Deletes items from the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Replaces the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-typeId
        in: path
        description: resource-type Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/enrolledRSs:
    get:
      tags:
        - enrolled-rs
      description: Returns the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledIdentifier
              - '-enrolledIdentifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[enrolled-rs]
          in: query
          description: Selects the set of enrolled-rs fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabled
              - enrolledIdentifier
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: filter[enrolled-rs]
          in: query
          description: Filters the collection of enrolled-rs using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/enrolled-rs'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - enrolled-rs
      description: Creates an item of type enrolled-rs and adds it to enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-rs
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/enrolledRSs/{enrolled-rsId}:
    get:
      tags:
        - enrolled-rs
      description: Returns an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[enrolled-rs]
          in: query
          description: Selects the set of enrolled-rs fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabled
              - enrolledIdentifier
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - enrolled-rs
      description: Deletes an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-rs
      description: Modifies an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-rs
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/relationships/enrolledRSs:
    get:
      tags:
        - enrolled-rs
      description: Returns the relationship identifiers for enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[enrolled-rs]
          in: query
          description: Filters the collection of enrolled-rs using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
    post:
      tags:
        - enrolled-rs
      description: Adds items to the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
    delete:
      tags:
        - enrolled-rs
      description: Deletes items from the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-rs
      description: Replaces the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /data-source:
    get:
      tags:
        - data-source
      description: Returns the collection of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - '-logoUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of data-source using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - data-source
      description: Creates an item of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
  /data-source/{data-sourceId}:
    get:
      tags:
        - data-source
      description: Returns an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - data-source
      description: Deletes an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Modifies an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/oauthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - redirectUris
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client and adds it to oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/oauthClient/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - redirectUris
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/relationships/oauthClient:
    get:
      tags:
        - oauth-client
      description: Returns the relationship identifiers for oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
    patch:
      tags:
        - oauth-client
      description: Replaces the relationship oauthClient
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /resource-type:
    get:
      tags:
        - resource-type
      description: Returns the collection of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - type
              - '-type'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-type]
          in: query
          description: Selects the set of resource-type fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - type
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[resource-type]
          in: query
          description: Filters the collection of resource-type using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-type using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-type'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-type
      description: Creates an item of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-type
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-type'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-type'
  /resource-type/{resource-typeId}:
    get:
      tags:
        - resource-type
      description: Returns an instance of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-type]
          in: query
          description: Selects the set of resource-type fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - type
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-type'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-type
      description: Deletes an instance of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-type
      description: Modifies an instance of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-type
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-type'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-typeId
        in: path
        description: resource-type Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/authorizationServer:
    get:
      tags:
        - authorization-server
      description: Returns the relationship authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authorization-server
      description: Creates an item of type authorization-server and adds it to authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/authorizationServer/{authorization-serverId}:
    get:
      tags:
        - authorization-server
      description: Returns an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authorization-server
      description: Deletes an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authorization-server
      description: Modifies an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/relationships/authorizationServer:
    get:
      tags:
        - authorization-server
      description: Returns the relationship identifiers for authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
    patch:
      tags:
        - authorization-server
      description: Replaces the relationship authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /organization/{organizationId}/clients:
    get:
      tags:
        - enrolled-client
      description: Returns the relationship clients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - iconUri
              - '-iconUri'
              - identifier
              - '-identifier'
              - policyUri
              - '-policyUri'
              - spName
              - '-spName'
              - tosUri
              - '-tosUri'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[enrolled-client]
          in: query
          description: Selects the set of enrolled-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabledOn
              - iconUri
              - identifier
              - policyUri
              - spName
              - tosUri
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: filter[enrolled-client]
          in: query
          description: Filters the collection of enrolled-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/enrolled-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - enrolled-client
      description: Creates an item of type enrolled-client and adds it to clients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/clients/{enrolled-clientId}:
    get:
      tags:
        - enrolled-client
      description: Returns an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[enrolled-client]
          in: query
          description: Selects the set of enrolled-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabledOn
              - iconUri
              - identifier
              - policyUri
              - spName
              - tosUri
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - organization
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - enrolled-client
      description: Deletes an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-client
      description: Modifies an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/clients:
    get:
      tags:
        - enrolled-client
      description: Returns the relationship identifiers for clients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[enrolled-client]
          in: query
          description: Filters the collection of enrolled-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
    post:
      tags:
        - enrolled-client
      description: Adds items to the relationship clients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
    delete:
      tags:
        - enrolled-client
      description: Deletes items from the relationship clients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-client
      description: Replaces the relationship clients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /resource-definition:
    get:
      tags:
        - resource-definition
      description: Returns the collection of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - informationUri
              - '-informationUri'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-definition using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
  /resource-definition/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /oauth-provider:
    get:
      tags:
        - oauth-provider
      description: Returns the collection of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - issuerUri
              - '-issuerUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-provider using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
  /oauth-provider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/organization:
    get:
      tags:
        - organization
      description: Returns the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - organization
      description: Creates an item of type organization and adds it to organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/organization/{organizationId}:
    get:
      tags:
        - organization
      description: Returns an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - organization
      description: Deletes an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - organization
      description: Modifies an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/relationships/organization:
    get:
      tags:
        - organization
      description: Returns the relationship identifiers for organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
    patch:
      tags:
        - organization
      description: Replaces the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /resource-scope/{resource-scopeId}/resourceDefinitions:
    get:
      tags:
        - resource-definition
      description: Returns the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - informationUri
              - '-informationUri'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition and adds it to resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /resource-scope/{resource-scopeId}/resourceDefinitions/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-scope/{resource-scopeId}/relationships/resourceDefinitions:
    get:
      tags:
        - resource-definition
      description: Returns the relationship identifiers for resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
    post:
      tags:
        - resource-definition
      description: Adds items to the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
    delete:
      tags:
        - resource-definition
      description: Deletes items from the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Replaces the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /oauth-provider/{oauth-providerId}/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - '-logoUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - data-source
      description: Creates an item of type data-source and adds it to dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /oauth-provider/{oauth-providerId}/dataSource/{data-sourceId}:
    get:
      tags:
        - data-source
      description: Returns an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - data-source
      description: Deletes an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Modifies an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /oauth-provider/{oauth-providerId}/relationships/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship identifiers for dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
    patch:
      tags:
        - data-source
      description: Replaces the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /oauth-provider/{oauth-providerId}/customScopes:
    get:
      tags:
        - oauth-provider-custom-scopes
      description: Returns the relationship customScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scopes
              - '-scopes'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider-custom-scopes]
          in: query
          description: Selects the set of oauth-provider-custom-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scopes
              - provider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - provider
          collectionFormat: csv
        - name: filter[oauth-provider-custom-scopes]
          in: query
          description: Filters the collection of oauth-provider-custom-scopes using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider-custom-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider-custom-scopes
      description: Creates an item of type oauth-provider-custom-scopes and adds it to customScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider-custom-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /oauth-provider/{oauth-providerId}/customScopes/{oauth-provider-custom-scopesId}:
    get:
      tags:
        - oauth-provider-custom-scopes
      description: Returns an instance of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider-custom-scopes]
          in: query
          description: Selects the set of oauth-provider-custom-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scopes
              - provider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - provider
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider-custom-scopes
      description: Deletes an instance of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider-custom-scopes
      description: Modifies an instance of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider-custom-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
      - name: oauth-provider-custom-scopesId
        in: path
        description: oauth-provider-custom-scopes Identifier
        required: true
        type: string
  /oauth-provider/{oauth-providerId}/relationships/customScopes:
    get:
      tags:
        - oauth-provider-custom-scopes
      description: Returns the relationship identifiers for customScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-provider-custom-scopes]
          in: query
          description: Filters the collection of oauth-provider-custom-scopes using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider-custom-scopes
    patch:
      tags:
        - oauth-provider-custom-scopes
      description: Replaces the relationship customScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider-custom-scopes
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/oauthProvider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - issuerUri
              - '-issuerUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider and adds it to oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/oauthProvider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/relationships/oauthProvider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship identifiers for oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
    patch:
      tags:
        - oauth-provider
      description: Replaces the relationship oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /oauth-provider-custom-scopes:
    get:
      tags:
        - oauth-provider-custom-scopes
      description: Returns the collection of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scopes
              - '-scopes'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider-custom-scopes]
          in: query
          description: Selects the set of oauth-provider-custom-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scopes
              - provider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - provider
          collectionFormat: csv
        - name: filter[oauth-provider-custom-scopes]
          in: query
          description: Filters the collection of oauth-provider-custom-scopes using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-provider-custom-scopes using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider-custom-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider-custom-scopes
      description: Creates an item of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider-custom-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
  /oauth-provider-custom-scopes/{oauth-provider-custom-scopesId}:
    get:
      tags:
        - oauth-provider-custom-scopes
      description: Returns an instance of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider-custom-scopes]
          in: query
          description: Selects the set of oauth-provider-custom-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scopes
              - provider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - provider
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider-custom-scopes
      description: Deletes an instance of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider-custom-scopes
      description: Modifies an instance of type oauth-provider-custom-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider-custom-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider-custom-scopes'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-provider-custom-scopesId
        in: path
        description: oauth-provider-custom-scopes Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/enrolledRSs:
    get:
      tags:
        - enrolled-rs
      description: Returns the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledIdentifier
              - '-enrolledIdentifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[enrolled-rs]
          in: query
          description: Selects the set of enrolled-rs fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabled
              - enrolledIdentifier
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: filter[enrolled-rs]
          in: query
          description: Filters the collection of enrolled-rs using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/enrolled-rs'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - enrolled-rs
      description: Creates an item of type enrolled-rs and adds it to enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-rs
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/enrolledRSs/{enrolled-rsId}:
    get:
      tags:
        - enrolled-rs
      description: Returns an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[enrolled-rs]
          in: query
          description: Selects the set of enrolled-rs fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabled
              - enrolledIdentifier
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - enrolled-rs
      description: Deletes an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-rs
      description: Modifies an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-rs
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/relationships/enrolledRSs:
    get:
      tags:
        - enrolled-rs
      description: Returns the relationship identifiers for enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[enrolled-rs]
          in: query
          description: Filters the collection of enrolled-rs using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
    post:
      tags:
        - enrolled-rs
      description: Adds items to the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
    delete:
      tags:
        - enrolled-rs
      description: Deletes items from the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-rs
      description: Replaces the relationship enrolledRSs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-rs
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/organization:
    get:
      tags:
        - organization
      description: Returns the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - organization
      description: Creates an item of type organization and adds it to organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/organization/{organizationId}:
    get:
      tags:
        - organization
      description: Returns an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - organization
      description: Deletes an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - organization
      description: Modifies an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/relationships/organization:
    get:
      tags:
        - organization
      description: Returns the relationship identifiers for organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
    patch:
      tags:
        - organization
      description: Replaces the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/resourceScopes:
    get:
      tags:
        - resource-scope
      description: Returns the relationship resourceScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - displayName
              - '-displayName'
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - displayName
              - scope
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
        - name: filter[resource-scope]
          in: query
          description: Filters the collection of resource-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-scope
      description: Creates an item of type resource-scope and adds it to resourceScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/resourceScopes/{resource-scopeId}:
    get:
      tags:
        - resource-scope
      description: Returns an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - displayName
              - scope
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-scope
      description: Deletes an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-scope
      description: Modifies an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/relationships/resourceScopes:
    get:
      tags:
        - resource-scope
      description: Returns the relationship identifiers for resourceScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-scope]
          in: query
          description: Filters the collection of resource-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-scope
    post:
      tags:
        - resource-scope
      description: Adds items to the relationship resourceScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-scope
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-scope
    delete:
      tags:
        - resource-scope
      description: Deletes items from the relationship resourceScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-scope
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-scope
      description: Replaces the relationship resourceScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-scope
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/requiredDataSource:
    get:
      tags:
        - required-data-source
      description: Returns the relationship requiredDataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[required-data-source]
          in: query
          description: Selects the set of required-data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: filter[required-data-source]
          in: query
          description: Filters the collection of required-data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/required-data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - required-data-source
      description: Creates an item of type required-data-source and adds it to requiredDataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: required-data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/required-data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/required-data-source'
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/requiredDataSource/{required-data-sourceId}:
    get:
      tags:
        - required-data-source
      description: Returns an instance of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[required-data-source]
          in: query
          description: Selects the set of required-data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/required-data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - required-data-source
      description: Deletes an instance of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - required-data-source
      description: Modifies an instance of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: required-data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/required-data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
      - name: required-data-sourceId
        in: path
        description: required-data-source Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/relationships/requiredDataSource:
    get:
      tags:
        - required-data-source
      description: Returns the relationship identifiers for requiredDataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[required-data-source]
          in: query
          description: Filters the collection of required-data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - required-data-source
    patch:
      tags:
        - required-data-source
      description: Replaces the relationship requiredDataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - required-data-source
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /enrolled-rs:
    get:
      tags:
        - enrolled-rs
      description: Returns the collection of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledIdentifier
              - '-enrolledIdentifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[enrolled-rs]
          in: query
          description: Selects the set of enrolled-rs fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabled
              - enrolledIdentifier
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: filter[enrolled-rs]
          in: query
          description: Filters the collection of enrolled-rs using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of enrolled-rs using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/enrolled-rs'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - enrolled-rs
      description: Creates an item of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-rs
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
  /enrolled-rs/{enrolled-rsId}:
    get:
      tags:
        - enrolled-rs
      description: Returns an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[enrolled-rs]
          in: query
          description: Selects the set of enrolled-rs fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabled
              - enrolledIdentifier
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - dataSource
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - enrolled-rs
      description: Deletes an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-rs
      description: Modifies an instance of type enrolled-rs
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-rs
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-rs'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/enrolledClients:
    get:
      tags:
        - enrolled-client
      description: Returns the relationship enrolledClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - iconUri
              - '-iconUri'
              - identifier
              - '-identifier'
              - policyUri
              - '-policyUri'
              - spName
              - '-spName'
              - tosUri
              - '-tosUri'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[enrolled-client]
          in: query
          description: Selects the set of enrolled-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabledOn
              - iconUri
              - identifier
              - policyUri
              - spName
              - tosUri
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: filter[enrolled-client]
          in: query
          description: Filters the collection of enrolled-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/enrolled-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - enrolled-client
      description: Creates an item of type enrolled-client and adds it to enrolledClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/enrolledClients/{enrolled-clientId}:
    get:
      tags:
        - enrolled-client
      description: Returns an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[enrolled-client]
          in: query
          description: Selects the set of enrolled-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabledOn
              - iconUri
              - identifier
              - policyUri
              - spName
              - tosUri
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - organization
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - enrolled-client
      description: Deletes an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-client
      description: Modifies an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/relationships/enrolledClients:
    get:
      tags:
        - enrolled-client
      description: Returns the relationship identifiers for enrolledClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[enrolled-client]
          in: query
          description: Filters the collection of enrolled-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
    post:
      tags:
        - enrolled-client
      description: Adds items to the relationship enrolledClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
    delete:
      tags:
        - enrolled-client
      description: Deletes items from the relationship enrolledClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-client
      description: Replaces the relationship enrolledClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - enrolled-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/idpAuthenticators:
    get:
      tags:
        - idp-authenticator
      description: Returns the relationship idpAuthenticators
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[idp-authenticator]
          in: query
          description: Selects the set of idp-authenticator fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalQueryParams
              - identifier
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: filter[idp-authenticator]
          in: query
          description: Filters the collection of idp-authenticator using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/idp-authenticator'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - idp-authenticator
      description: Creates an item of type idp-authenticator and adds it to idpAuthenticators
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: idp-authenticator
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/idpAuthenticators/{idp-authenticatorId}:
    get:
      tags:
        - idp-authenticator
      description: Returns an instance of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[idp-authenticator]
          in: query
          description: Selects the set of idp-authenticator fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalQueryParams
              - identifier
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - idp-authenticator
      description: Deletes an instance of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - idp-authenticator
      description: Modifies an instance of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: idp-authenticator
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
      - name: idp-authenticatorId
        in: path
        description: idp-authenticator Identifier
        required: true
        type: string
  /data-source/{data-sourceId}/relationships/idpAuthenticators:
    get:
      tags:
        - idp-authenticator
      description: Returns the relationship identifiers for idpAuthenticators
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[idp-authenticator]
          in: query
          description: Filters the collection of idp-authenticator using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - idp-authenticator
    post:
      tags:
        - idp-authenticator
      description: Adds items to the relationship idpAuthenticators
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - idp-authenticator
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - idp-authenticator
    delete:
      tags:
        - idp-authenticator
      description: Deletes items from the relationship idpAuthenticators
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - idp-authenticator
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - idp-authenticator
      description: Replaces the relationship idpAuthenticators
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - idp-authenticator
      responses:
        '204':
          description: Successful response
    parameters:
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/oauthProvider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - issuerUri
              - '-issuerUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider and adds it to oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/oauthProvider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/relationships/oauthProvider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship identifiers for oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
    patch:
      tags:
        - oauth-provider
      description: Replaces the relationship oauthProvider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /organization:
    get:
      tags:
        - organization
      description: Returns the collection of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of organization using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - organization
      description: Creates an item of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
  /organization/{organizationId}:
    get:
      tags:
        - organization
      description: Returns an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - organization
      description: Deletes an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - organization
      description: Modifies an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/dataSources:
    get:
      tags:
        - data-source
      description: Returns the relationship dataSources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - '-logoUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - data-source
      description: Creates an item of type data-source and adds it to dataSources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/dataSources/{data-sourceId}:
    get:
      tags:
        - data-source
      description: Returns an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - data-source
      description: Deletes an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Modifies an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/dataSources:
    get:
      tags:
        - data-source
      description: Returns the relationship identifiers for dataSources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - data-source
    post:
      tags:
        - data-source
      description: Adds items to the relationship dataSources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - data-source
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - data-source
    delete:
      tags:
        - data-source
      description: Deletes items from the relationship dataSources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - data-source
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Replaces the relationship dataSources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - data-source
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /required-data-source/{required-data-sourceId}/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - '-logoUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - data-source
      description: Creates an item of type data-source and adds it to dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
    parameters:
      - name: required-data-sourceId
        in: path
        description: required-data-source Identifier
        required: true
        type: string
  /required-data-source/{required-data-sourceId}/dataSource/{data-sourceId}:
    get:
      tags:
        - data-source
      description: Returns an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - data-source
      description: Deletes an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Modifies an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: required-data-sourceId
        in: path
        description: required-data-source Identifier
        required: true
        type: string
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /required-data-source/{required-data-sourceId}/relationships/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship identifiers for dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
    patch:
      tags:
        - data-source
      description: Replaces the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
      responses:
        '204':
          description: Successful response
    parameters:
      - name: required-data-sourceId
        in: path
        description: required-data-source Identifier
        required: true
        type: string
  /idp-authenticator:
    get:
      tags:
        - idp-authenticator
      description: Returns the collection of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[idp-authenticator]
          in: query
          description: Selects the set of idp-authenticator fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalQueryParams
              - identifier
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: filter[idp-authenticator]
          in: query
          description: Filters the collection of idp-authenticator using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of idp-authenticator using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/idp-authenticator'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - idp-authenticator
      description: Creates an item of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: idp-authenticator
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
  /idp-authenticator/{idp-authenticatorId}:
    get:
      tags:
        - idp-authenticator
      description: Returns an instance of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[idp-authenticator]
          in: query
          description: Selects the set of idp-authenticator fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalQueryParams
              - identifier
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - idp-authenticator
      description: Deletes an instance of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - idp-authenticator
      description: Modifies an instance of type idp-authenticator
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: idp-authenticator
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/idp-authenticator'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: idp-authenticatorId
        in: path
        description: idp-authenticator Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/organization:
    get:
      tags:
        - organization
      description: Returns the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - organization
      description: Creates an item of type organization and adds it to organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/organization/{organizationId}:
    get:
      tags:
        - organization
      description: Returns an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - mainOperator
              - name
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServers
              - clients
              - dataSources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - organization
      description: Deletes an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - organization
      description: Modifies an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/relationships/organization:
    get:
      tags:
        - organization
      description: Returns the relationship identifiers for organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
    patch:
      tags:
        - organization
      description: Replaces the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /resource-scope:
    get:
      tags:
        - resource-scope
      description: Returns the collection of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - displayName
              - '-displayName'
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - displayName
              - scope
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
        - name: filter[resource-scope]
          in: query
          description: Filters the collection of resource-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-scope using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-scope
      description: Creates an item of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
  /resource-scope/{resource-scopeId}:
    get:
      tags:
        - resource-scope
      description: Returns an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - displayName
              - scope
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-scope
      description: Deletes an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-scope
      description: Modifies an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/authorizationServer:
    get:
      tags:
        - authorization-server
      description: Returns the relationship authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authorization-server
      description: Creates an item of type authorization-server and adds it to authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/authorizationServer/{authorization-serverId}:
    get:
      tags:
        - authorization-server
      description: Returns an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authorization-server
      description: Deletes an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authorization-server
      description: Modifies an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/relationships/authorizationServer:
    get:
      tags:
        - authorization-server
      description: Returns the relationship identifiers for authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
    patch:
      tags:
        - authorization-server
      description: Replaces the relationship authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/resourceDefinitions:
    get:
      tags:
        - resource-definition
      description: Returns the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - informationUri
              - '-informationUri'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-definition
      description: Creates an item of type resource-definition and adds it to resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/resourceDefinitions/{resource-definitionId}:
    get:
      tags:
        - resource-definition
      description: Returns an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-definition]
          in: query
          description: Selects the set of resource-definition fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - informationUri
              - logoUrl
              - name
              - styleColor
              - styleFontColor
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - resourceScopes
              - resourceType
              - rsResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-definition'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-definition
      description: Deletes an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Modifies an instance of type resource-definition
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-definition
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-definition'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /authorization-server/{authorization-serverId}/relationships/resourceDefinitions:
    get:
      tags:
        - resource-definition
      description: Returns the relationship identifiers for resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-definition]
          in: query
          description: Filters the collection of resource-definition using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
    post:
      tags:
        - resource-definition
      description: Adds items to the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
    delete:
      tags:
        - resource-definition
      description: Deletes items from the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-definition
      description: Replaces the relationship resourceDefinitions
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - resource-definition
      responses:
        '204':
          description: Successful response
    parameters:
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /enrolled-client:
    get:
      tags:
        - enrolled-client
      description: Returns the collection of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - iconUri
              - '-iconUri'
              - identifier
              - '-identifier'
              - policyUri
              - '-policyUri'
              - spName
              - '-spName'
              - tosUri
              - '-tosUri'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[enrolled-client]
          in: query
          description: Selects the set of enrolled-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabledOn
              - iconUri
              - identifier
              - policyUri
              - spName
              - tosUri
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: filter[enrolled-client]
          in: query
          description: Filters the collection of enrolled-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of enrolled-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/enrolled-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - enrolled-client
      description: Creates an item of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
  /enrolled-client/{enrolled-clientId}:
    get:
      tags:
        - enrolled-client
      description: Returns an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[enrolled-client]
          in: query
          description: Selects the set of enrolled-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - disabledOn
              - iconUri
              - identifier
              - policyUri
              - spName
              - tosUri
              - authorizationServer
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizationServer
              - organization
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - enrolled-client
      description: Deletes an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - enrolled-client
      description: Modifies an instance of type enrolled-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: enrolled-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/enrolled-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/authorizationServer:
    get:
      tags:
        - authorization-server
      description: Returns the relationship authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authorization-server
      description: Creates an item of type authorization-server and adds it to authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/authorizationServer/{authorization-serverId}:
    get:
      tags:
        - authorization-server
      description: Returns an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authorization-server]
          in: query
          description: Selects the set of authorization-server fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClients
              - enrolledRSs
              - oauthClient
              - oauthProvider
              - organization
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authorization-server'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authorization-server
      description: Deletes an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authorization-server
      description: Modifies an instance of type authorization-server
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authorization-server
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authorization-server'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
      - name: authorization-serverId
        in: path
        description: authorization-server Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/relationships/authorizationServer:
    get:
      tags:
        - authorization-server
      description: Returns the relationship identifiers for authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[authorization-server]
          in: query
          description: Filters the collection of authorization-server using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
    patch:
      tags:
        - authorization-server
      description: Replaces the relationship authorizationServer
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/rsResources:
    get:
      tags:
        - rs-resource
      description: Returns the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[rs-resource]
          in: query
          description: Selects the set of rs-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: filter[rs-resource]
          in: query
          description: Filters the collection of rs-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/rs-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - rs-resource
      description: Creates an item of type rs-resource and adds it to rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: rs-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/rs-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/rs-resource'
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/rsResources/{rs-resourceId}:
    get:
      tags:
        - rs-resource
      description: Returns an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[rs-resource]
          in: query
          description: Selects the set of rs-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/rs-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - rs-resource
      description: Deletes an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - rs-resource
      description: Modifies an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: rs-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/rs-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
  /enrolled-rs/{enrolled-rsId}/relationships/rsResources:
    get:
      tags:
        - rs-resource
      description: Returns the relationship identifiers for rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[rs-resource]
          in: query
          description: Filters the collection of rs-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
    post:
      tags:
        - rs-resource
      description: Adds items to the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
    delete:
      tags:
        - rs-resource
      description: Deletes items from the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - rs-resource
      description: Replaces the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-rsId
        in: path
        description: enrolled-rs Identifier
        required: true
        type: string
  /required-data-source:
    get:
      tags:
        - required-data-source
      description: Returns the collection of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[required-data-source]
          in: query
          description: Selects the set of required-data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: filter[required-data-source]
          in: query
          description: Filters the collection of required-data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of required-data-source using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/required-data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - required-data-source
      description: Creates an item of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: required-data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/required-data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/required-data-source'
  /required-data-source/{required-data-sourceId}:
    get:
      tags:
        - required-data-source
      description: Returns an instance of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[required-data-source]
          in: query
          description: Selects the set of required-data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/required-data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - required-data-source
      description: Deletes an instance of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - required-data-source
      description: Modifies an instance of type required-data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: required-data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/required-data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: required-data-sourceId
        in: path
        description: required-data-source Identifier
        required: true
        type: string
  /idp-authenticator/{idp-authenticatorId}/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - '-logoUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - data-source
      description: Creates an item of type data-source and adds it to dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
    parameters:
      - name: idp-authenticatorId
        in: path
        description: idp-authenticator Identifier
        required: true
        type: string
  /idp-authenticator/{idp-authenticatorId}/dataSource/{data-sourceId}:
    get:
      tags:
        - data-source
      description: Returns an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[data-source]
          in: query
          description: Selects the set of data-source fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - logoUrl
              - styleColor
              - styleFontColor
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRSs
              - idpAuthenticators
              - oauthProvider
              - organization
              - requiredDataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/data-source'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - data-source
      description: Deletes an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - data-source
      description: Modifies an instance of type data-source
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: data-source
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/data-source'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: idp-authenticatorId
        in: path
        description: idp-authenticator Identifier
        required: true
        type: string
      - name: data-sourceId
        in: path
        description: data-source Identifier
        required: true
        type: string
  /idp-authenticator/{idp-authenticatorId}/relationships/dataSource:
    get:
      tags:
        - data-source
      description: Returns the relationship identifiers for dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[data-source]
          in: query
          description: Filters the collection of data-source using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
    patch:
      tags:
        - data-source
      description: Replaces the relationship dataSource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
      responses:
        '204':
          description: Successful response
    parameters:
      - name: idp-authenticatorId
        in: path
        description: idp-authenticator Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/resourceType:
    get:
      tags:
        - resource-type
      description: Returns the relationship resourceType
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - type
              - '-type'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-type]
          in: query
          description: Selects the set of resource-type fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - type
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
          collectionFormat: csv
        - name: filter[resource-type]
          in: query
          description: Filters the collection of resource-type using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-type'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-type
      description: Creates an item of type resource-type and adds it to resourceType
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-type
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-type'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-type'
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/resourceType/{resource-typeId}:
    get:
      tags:
        - resource-type
      description: Returns an instance of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-type]
          in: query
          description: Selects the set of resource-type fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - type
              - resourceDefinitions
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceDefinitions
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-type'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-type
      description: Deletes an instance of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-type
      description: Modifies an instance of type resource-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-type
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-type'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
      - name: resource-typeId
        in: path
        description: resource-type Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/relationships/resourceType:
    get:
      tags:
        - resource-type
      description: Returns the relationship identifiers for resourceType
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[resource-type]
          in: query
          description: Filters the collection of resource-type using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-type
    patch:
      tags:
        - resource-type
      description: Replaces the relationship resourceType
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-type
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-scope/{resource-scopeId}/rsResources:
    get:
      tags:
        - rs-resource
      description: Returns the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[rs-resource]
          in: query
          description: Selects the set of rs-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: filter[rs-resource]
          in: query
          description: Filters the collection of rs-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/rs-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - rs-resource
      description: Creates an item of type rs-resource and adds it to rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: rs-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/rs-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/rs-resource'
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /resource-scope/{resource-scopeId}/rsResources/{rs-resourceId}:
    get:
      tags:
        - rs-resource
      description: Returns an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[rs-resource]
          in: query
          description: Selects the set of rs-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/rs-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - rs-resource
      description: Deletes an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - rs-resource
      description: Modifies an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: rs-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/rs-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
  /resource-scope/{resource-scopeId}/relationships/rsResources:
    get:
      tags:
        - rs-resource
      description: Returns the relationship identifiers for rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[rs-resource]
          in: query
          description: Filters the collection of rs-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
    post:
      tags:
        - rs-resource
      description: Adds items to the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
    delete:
      tags:
        - rs-resource
      description: Deletes items from the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - rs-resource
      description: Replaces the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /oauth-client:
    get:
      tags:
        - oauth-client
      description: Returns the collection of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - '-baseUrl'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - redirectUris
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
  /oauth-client/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - baseUrl
              - clientId
              - clientSecret
              - redirectUris
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/rsResources:
    get:
      tags:
        - rs-resource
      description: Returns the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - '-identifier'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[rs-resource]
          in: query
          description: Selects the set of rs-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: filter[rs-resource]
          in: query
          description: Filters the collection of rs-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/rs-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - rs-resource
      description: Creates an item of type rs-resource and adds it to rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: rs-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/rs-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/rs-resource'
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/rsResources/{rs-resourceId}:
    get:
      tags:
        - rs-resource
      description: Returns an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[rs-resource]
          in: query
          description: Selects the set of rs-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - identifier
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledRS
              - resourceDefinition
              - resourceScopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/rs-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - rs-resource
      description: Deletes an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - rs-resource
      description: Modifies an instance of type rs-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: rs-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/rs-resource'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
  /resource-definition/{resource-definitionId}/relationships/rsResources:
    get:
      tags:
        - rs-resource
      description: Returns the relationship identifiers for rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[rs-resource]
          in: query
          description: Filters the collection of rs-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
    post:
      tags:
        - rs-resource
      description: Adds items to the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
    delete:
      tags:
        - rs-resource
      description: Deletes items from the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - rs-resource
      description: Replaces the relationship rsResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - rs-resource
      responses:
        '204':
          description: Successful response
    parameters:
      - name: resource-definitionId
        in: path
        description: resource-definition Identifier
        required: true
        type: string
  /oauth-provider-custom-scopes/{oauth-provider-custom-scopesId}/provider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - issuerUri
              - '-issuerUri'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider and adds it to provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
    parameters:
      - name: oauth-provider-custom-scopesId
        in: path
        description: oauth-provider-custom-scopes Identifier
        required: true
        type: string
  /oauth-provider-custom-scopes/{oauth-provider-custom-scopesId}/provider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - issuerUri
              - name
              - customScopes
              - dataSource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - customScopes
              - dataSource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-provider-custom-scopesId
        in: path
        description: oauth-provider-custom-scopes Identifier
        required: true
        type: string
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /oauth-provider-custom-scopes/{oauth-provider-custom-scopesId}/relationships/provider:
    get:
      tags:
        - oauth-provider
      description: Returns the relationship identifiers for provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
    patch:
      tags:
        - oauth-provider
      description: Replaces the relationship provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
      responses:
        '204':
          description: Successful response
    parameters:
      - name: oauth-provider-custom-scopesId
        in: path
        description: oauth-provider-custom-scopes Identifier
        required: true
        type: string
  /verifiable-credential-stakeholder:
    get:
      tags:
        - verifiable-credential-stakeholder
      description: Returns the collection of type verifiable-credential-stakeholder
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - did
              - '-did'
              - identifier
              - '-identifier'
              - isIssuer
              - '-isIssuer'
              - isVerifier
              - '-isVerifier'
              - logoUrl
              - '-logoUrl'
              - name
              - '-name'
              - serviceUrl
              - '-serviceUrl'
              - styleColor
              - '-styleColor'
              - styleFontColor
              - '-styleFontColor'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[verifiable-credential-stakeholder]
          in: query
          description: Selects the set of verifiable-credential-stakeholder fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - did
              - identifier
              - isIssuer
              - isVerifier
              - logoUrl
              - name
              - serviceUrl
              - styleColor
              - styleFontColor
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[verifiable-credential-stakeholder]
          in: query
          description: Filters the collection of verifiable-credential-stakeholder using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of verifiable-credential-stakeholder using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/verifiable-credential-stakeholder'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - verifiable-credential-stakeholder
      description: Creates an item of type verifiable-credential-stakeholder
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: verifiable-credential-stakeholder
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/verifiable-credential-stakeholder'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/verifiable-credential-stakeholder'
  /verifiable-credential-stakeholder/{verifiable-credential-stakeholderId}:
    get:
      tags:
        - verifiable-credential-stakeholder
      description: Returns an instance of type verifiable-credential-stakeholder
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[verifiable-credential-stakeholder]
          in: query
          description: Selects the set of verifiable-credential-stakeholder fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - did
              - identifier
              - isIssuer
              - isVerifier
              - logoUrl
              - name
              - serviceUrl
              - styleColor
              - styleFontColor
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/verifiable-credential-stakeholder'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - verifiable-credential-stakeholder
      description: Deletes an instance of type verifiable-credential-stakeholder
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - verifiable-credential-stakeholder
      description: Modifies an instance of type verifiable-credential-stakeholder
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: verifiable-credential-stakeholder
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/verifiable-credential-stakeholder'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: verifiable-credential-stakeholderId
        in: path
        description: verifiable-credential-stakeholder Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/delegatableRSResourceToClients:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[delegatable-rs-resource-to-client]
          in: query
          description: Selects the set of delegatable-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: filter[delegatable-rs-resource-to-client]
          in: query
          description: Filters the collection of delegatable-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/delegatable-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - delegatable-rs-resource-to-client
      description: Creates an item of type delegatable-rs-resource-to-client and adds it to delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: delegatable-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/delegatableRSResourceToClients/{delegatable-rs-resource-to-clientId}:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[delegatable-rs-resource-to-client]
          in: query
          description: Selects the set of delegatable-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - delegatable-rs-resource-to-client
      description: Deletes an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - delegatable-rs-resource-to-client
      description: Modifies an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: delegatable-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
      - name: delegatable-rs-resource-to-clientId
        in: path
        description: delegatable-rs-resource-to-client Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/relationships/delegatableRSResourceToClients:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns the relationship identifiers for delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[delegatable-rs-resource-to-client]
          in: query
          description: Filters the collection of delegatable-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
    post:
      tags:
        - delegatable-rs-resource-to-client
      description: Adds items to the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
    delete:
      tags:
        - delegatable-rs-resource-to-client
      description: Deletes items from the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - delegatable-rs-resource-to-client
      description: Replaces the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /delegatable-rs-resource-to-client:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns the collection of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[delegatable-rs-resource-to-client]
          in: query
          description: Selects the set of delegatable-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: filter[delegatable-rs-resource-to-client]
          in: query
          description: Filters the collection of delegatable-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of delegatable-rs-resource-to-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/delegatable-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - delegatable-rs-resource-to-client
      description: Creates an item of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: delegatable-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
  /delegatable-rs-resource-to-client/{delegatable-rs-resource-to-clientId}:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[delegatable-rs-resource-to-client]
          in: query
          description: Selects the set of delegatable-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - delegatable-rs-resource-to-client
      description: Deletes an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - delegatable-rs-resource-to-client
      description: Modifies an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: delegatable-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: delegatable-rs-resource-to-clientId
        in: path
        description: delegatable-rs-resource-to-client Identifier
        required: true
        type: string
  /rs-resource/{rs-resourceId}/delegatableRSResourceToClients:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[delegatable-rs-resource-to-client]
          in: query
          description: Selects the set of delegatable-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: filter[delegatable-rs-resource-to-client]
          in: query
          description: Filters the collection of delegatable-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/delegatable-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - delegatable-rs-resource-to-client
      description: Creates an item of type delegatable-rs-resource-to-client and adds it to delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: delegatable-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
    parameters:
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
  /rs-resource/{rs-resourceId}/delegatableRSResourceToClients/{delegatable-rs-resource-to-clientId}:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[delegatable-rs-resource-to-client]
          in: query
          description: Selects the set of delegatable-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - delegatable-rs-resource-to-client
      description: Deletes an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - delegatable-rs-resource-to-client
      description: Modifies an instance of type delegatable-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: delegatable-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/delegatable-rs-resource-to-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
      - name: delegatable-rs-resource-to-clientId
        in: path
        description: delegatable-rs-resource-to-client Identifier
        required: true
        type: string
  /rs-resource/{rs-resourceId}/relationships/delegatableRSResourceToClients:
    get:
      tags:
        - delegatable-rs-resource-to-client
      description: Returns the relationship identifiers for delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[delegatable-rs-resource-to-client]
          in: query
          description: Filters the collection of delegatable-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
    post:
      tags:
        - delegatable-rs-resource-to-client
      description: Adds items to the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
    delete:
      tags:
        - delegatable-rs-resource-to-client
      description: Deletes items from the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - delegatable-rs-resource-to-client
      description: Replaces the relationship delegatableRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - delegatable-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string

  /enrolled-client/{enrolled-clientId}/restrictedRSResourceToClients:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[restricted-rs-resource-to-client]
          in: query
          description: Selects the set of restricted-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: filter[restricted-rs-resource-to-client]
          in: query
          description: Filters the collection of restricted-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/restricted-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - restricted-rs-resource-to-client
      description: Creates an item of type restricted-rs-resource-to-client and adds it to restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: restricted-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/restrictedRSResourceToClients/{restricted-rs-resource-to-clientId}:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[restricted-rs-resource-to-client]
          in: query
          description: Selects the set of restricted-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - restricted-rs-resource-to-client
      description: Deletes an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - restricted-rs-resource-to-client
      description: Modifies an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: restricted-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
      - name: restricted-rs-resource-to-clientId
        in: path
        description: restricted-rs-resource-to-client Identifier
        required: true
        type: string
  /enrolled-client/{enrolled-clientId}/relationships/restrictedRSResourceToClients:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns the relationship identifiers for restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[restricted-rs-resource-to-client]
          in: query
          description: Filters the collection of restricted-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
    post:
      tags:
        - restricted-rs-resource-to-client
      description: Adds items to the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
    delete:
      tags:
        - restricted-rs-resource-to-client
      description: Deletes items from the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - restricted-rs-resource-to-client
      description: Replaces the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: enrolled-clientId
        in: path
        description: enrolled-client Identifier
        required: true
        type: string
  /restricted-rs-resource-to-client:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns the collection of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[restricted-rs-resource-to-client]
          in: query
          description: Selects the set of restricted-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: filter[restricted-rs-resource-to-client]
          in: query
          description: Filters the collection of restricted-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of restricted-rs-resource-to-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/restricted-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - restricted-rs-resource-to-client
      description: Creates an item of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: restricted-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
  /restricted-rs-resource-to-client/{restricted-rs-resource-to-clientId}:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[restricted-rs-resource-to-client]
          in: query
          description: Selects the set of restricted-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - restricted-rs-resource-to-client
      description: Deletes an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - restricted-rs-resource-to-client
      description: Modifies an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: restricted-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: restricted-rs-resource-to-clientId
        in: path
        description: restricted-rs-resource-to-client Identifier
        required: true
        type: string

  /rs-resource/{rs-resourceId}/restrictedRSResourceToClients:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[restricted-rs-resource-to-client]
          in: query
          description: Selects the set of restricted-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: filter[restricted-rs-resource-to-client]
          in: query
          description: Filters the collection of restricted-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/restricted-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - restricted-rs-resource-to-client
      description: Creates an item of type restricted-rs-resource-to-client and adds it to restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: restricted-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
    parameters:
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
  /rs-resource/{rs-resourceId}/restrictedRSResourceToClients/{restricted-rs-resource-to-clientId}:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[restricted-rs-resource-to-client]
          in: query
          description: Selects the set of restricted-rs-resource-to-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - enrolledClient
              - rsResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - restricted-rs-resource-to-client
      description: Deletes an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - restricted-rs-resource-to-client
      description: Modifies an instance of type restricted-rs-resource-to-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: restricted-rs-resource-to-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/restricted-rs-resource-to-client'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string
      - name: restricted-rs-resource-to-clientId
        in: path
        description: restricted-rs-resource-to-client Identifier
        required: true
        type: string
  /rs-resource/{rs-resourceId}/relationships/restrictedRSResourceToClients:
    get:
      tags:
        - restricted-rs-resource-to-client
      description: Returns the relationship identifiers for restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[restricted-rs-resource-to-client]
          in: query
          description: Filters the collection of restricted-rs-resource-to-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
    post:
      tags:
        - restricted-rs-resource-to-client
      description: Adds items to the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
    delete:
      tags:
        - restricted-rs-resource-to-client
      description: Deletes items from the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - restricted-rs-resource-to-client
      description: Replaces the relationship restrictedRSResourceToClients
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - restricted-rs-resource-to-client
      responses:
        '204':
          description: Successful response
    parameters:
      - name: rs-resourceId
        in: path
        description: rs-resource Identifier
        required: true
        type: string


definitions:
  oauth-provider-custom-scopes:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          scopes:
            type: string
      relationships:
        type: object
        properties:
          provider:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
  oauth-provider:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          additionalRequestParams:
            type: object
            additionalProperties:
              type: object
          clientAuthenticationMethod:
            type: string
          clientId:
            type: string
          clientSecret:
            type: string
          issuerUri:
            type: string
          name:
            type: string
      relationships:
        type: object
        properties:
          customScopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider-custom-scopes
          dataSource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
  oauth-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          baseUrl:
            type: string
          clientId:
            type: string
          clientSecret:
            type: string
          redirectUris:
            type: array
            uniqueItems: true
            items:
              type: object
      relationships:
        type: object
  enrolled-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          disabledOn:
            type: string
            format: date-time
          iconUri:
            type: string
          identifier:
            type: string
          policyUri:
            type: string
          spName:
            type: string
          tosUri:
            type: string
      relationships:
        type: object
        properties:
          authorizationServer:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
          organization:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
  enrolled-rs:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          disabled:
            type: string
            format: date-time
          enrolledIdentifier:
            type: string
      relationships:
        type: object
        properties:
          authorizationServer:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
          dataSource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
          rsResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - rs-resource
  idp-authenticator:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          additionalQueryParams:
            type: object
            additionalProperties:
              type: object
          identifier:
            type: string
          logoUrl:
            type: string
          name:
            type: string
          styleColor:
            type: string
          styleFontColor:
            type: string
      relationships:
        type: object
        properties:
          dataSource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
  rs-resource:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          identifier:
            type: string
      relationships:
        type: object
        properties:
          enrolledRS:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - enrolled-rs
          resourceDefinition:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
          resourceScopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-scope
  authorization-server:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          identifier:
            type: string
      relationships:
        type: object
        properties:
          enrolledClients:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - enrolled-client
          enrolledRSs:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - enrolled-rs
          oauthClient:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client
          oauthProvider:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
          organization:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
          resourceDefinitions:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
    description: authorization server description
  organization:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          mainOperator:
            type: boolean
          name:
            type: string
      relationships:
        type: object
        properties:
          authorizationServers:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
          clients:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - enrolled-client
          dataSources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
  resource-definition:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          identifier:
            type: string
          informationUri:
            type: string
          logoUrl:
            type: string
          name:
            type: string
          styleColor:
            type: string
          styleFontColor:
            type: string
      relationships:
        type: object
        properties:
          authorizationServer:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authorization-server
          resourceScopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-scope
          resourceType:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-type
          rsResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - rs-resource
    description: resource definition description
  data-source:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          logoUrl:
            type: string
          styleColor:
            type: string
          styleFontColor:
            type: string
      relationships:
        type: object
        properties:
          enrolledRSs:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - enrolled-rs
          idpAuthenticators:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - idp-authenticator
          oauthProvider:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
          organization:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
          requiredDataSource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - required-data-source
  resource-scope:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          displayName:
            type: string
          scope:
            type: string
      relationships:
        type: object
        properties:
          resourceDefinitions:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
          rsResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - rs-resource
  resource-type:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          type:
            type: string
      relationships:
        type: object
        properties:
          resourceDefinitions:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-definition
  required-data-source:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
      relationships:
        type: object
        properties:
          dataSource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - data-source
  verifiable-credential-stakeholder:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          did:
            type: string
          identifier:
            type: string
          isIssuer:
            type: boolean
          isVerifier:
            type: boolean
          logoUrl:
            type: string
          name:
            type: string
          serviceUrl:
            type: string
          styleColor:
            type: string
          styleFontColor:
            type: string
      relationships:
        type: object

  restricted-rs-resource-to-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
      relationships:
        type: object
        properties:
          enrolledClient:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - enrolled-client
          rsResource:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - rs-resource
  delegatable-rs-resource-to-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
      relationships:
        type: object
        properties:
          enrolledClient:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - enrolled-client
          rsResource:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - rs-resource
