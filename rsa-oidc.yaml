swagger: '2.0'
info:
  version: v1.0
  title: RSA OIDC Admin API
  description: |
    Some points to understand before using this OpenAPI documentation:

    - Before making any requests, you must click the "Authorize" button below and enter two values:
      - the value for the Authorization header (defined by the application config's wallet-admin.staticToken property)
      - the value for the ApiVersion header (defined by the application config's elide.swagger.version property)

    - The OpenAPI documentation gives "string" as the type for "id" fields. However, this is due to a conversion taking place in the Elide framework. In fact, an integer value is required for all "id" fields.

    - The OpenAPI documentation generated and provided here is for OpenAPI v2.

    For more information about the OpenAPI specification, visit https://swagger.io/specification/v2

host: localhost:9096
basePath: /json-api
schemes: 
  - http
securityDefinitions:
  StaticToken:
    type: apiKey
    in: header
    name: Authorization
  Version:
    type: apiKey
    in: header
    name: ApiVersion
security:
  - StaticToken: []
  - Version: []
tags:
  - name: api-filter-advice-mapping
  - name: authority
  - name: authority-claim-combiner-config
  - name: authority-claim-filter-config
  - name: authority-filtering-api-path
  - name: capability-ticket
  - name: capability-ticket-resource
  - name: generic-resource
  - name: generic-resource-alias
  - name: generic-resource-alias-scope
  - name: generic-resource-authorization
  - name: generic-resource-authorization-scope
  - name: generic-resource-content-type
  - name: oauth-client
  - name: oauth-client-metadata
  - name: oauth-provider
  - name: protected-http-path
  - name: protected-resource-path-mapping
  - name: protected-resource-path-mapping-scopes
  - name: resource
  - name: resource-scope
  - name: resource-authority-mapping
  - name: user-restriction
paths:
  /authority:
    get:
      tags:
        - authority
      description: Returns the collection of type authority
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityValue
              - '-authorityValue'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authority]
          in: query
          description: Selects the set of authority fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityValue
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[authority]
          in: query
          description: Filters the collection of authority using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of authority using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authority'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authority
      description: Creates an item of type authority
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority'
  /authority/{authorityId}:
    get:
      tags:
        - authority
      description: Returns an instance of type authority
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authority]
          in: query
          description: Selects the set of authority fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityValue
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authority
      description: Deletes an instance of type authority
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authority
      description: Modifies an instance of type authority
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: authorityId
        in: path
        description: authority Identifier
        required: true
        type: string
  /api-filter-advice-mapping:
    get:
      tags:
        - api-filter-advice-mapping
      description: Returns the collection of type api-filter-advice-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - filterType
              - '-filterType'
              - orderPriority
              - '-orderPriority'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[api-filter-advice-mapping]
          in: query
          description: Selects the set of api-filter-advice-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - filterType
              - orderPriority
              - authorityFilteringApiPath
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityFilteringApiPath
          collectionFormat: csv
        - name: filter[api-filter-advice-mapping]
          in: query
          description: Filters the collection of api-filter-advice-mapping using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of api-filter-advice-mapping using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/api-filter-advice-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - api-filter-advice-mapping
      description: Creates an item of type api-filter-advice-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: api-filter-advice-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/api-filter-advice-mapping'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/api-filter-advice-mapping'
  /api-filter-advice-mapping/{api-filter-advice-mappingId}:
    get:
      tags:
        - api-filter-advice-mapping
      description: Returns an instance of type api-filter-advice-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[api-filter-advice-mapping]
          in: query
          description: Selects the set of api-filter-advice-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - filterType
              - orderPriority
              - authorityFilteringApiPath
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityFilteringApiPath
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/api-filter-advice-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - api-filter-advice-mapping
      description: Deletes an instance of type api-filter-advice-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - api-filter-advice-mapping
      description: Modifies an instance of type api-filter-advice-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: api-filter-advice-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/api-filter-advice-mapping'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: api-filter-advice-mappingId
        in: path
        description: api-filter-advice-mapping Identifier
        required: true
        type: string
  /oauth-client:
    get:
      tags:
        - oauth-client
      description: Returns the collection of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - '-clientId'
              - clientName
              - '-clientName'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - clientName
              - redirectUris
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
        - name: filter[oauth-client]
          in: query
          description: Filters the collection of oauth-client using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-client using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client
      description: Creates an item of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
  /oauth-client/{oauth-clientId}:
    get:
      tags:
        - oauth-client
      description: Returns an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client]
          in: query
          description: Selects the set of oauth-client fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientId
              - clientName
              - redirectUris
              - oAuthClientMetaData
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - oAuthClientMetaData
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client
      description: Deletes an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client
      description: Modifies an instance of type oauth-client
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /resource-authority-mapping:
    get:
      tags:
        - resource-authority-mapping
      description: Returns the collection of type resource-authority-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityString
              - '-authorityString'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-authority-mapping]
          in: query
          description: Selects the set of resource-authority-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityString
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[resource-authority-mapping]
          in: query
          description: Filters the collection of resource-authority-mapping using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-authority-mapping using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-authority-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-authority-mapping
      description: Creates an item of type resource-authority-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-authority-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-authority-mapping'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-authority-mapping'
  /resource-authority-mapping/{resource-authority-mappingId}:
    get:
      tags:
        - resource-authority-mapping
      description: Returns an instance of type resource-authority-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-authority-mapping]
          in: query
          description: Selects the set of resource-authority-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityString
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-authority-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-authority-mapping
      description: Deletes an instance of type resource-authority-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-authority-mapping
      description: Modifies an instance of type resource-authority-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-authority-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-authority-mapping'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: resource-authority-mappingId
        in: path
        description: resource-authority-mapping Identifier
        required: true
        type: string
  /resource/{resourceId}/scopes:
    get:
      tags:
        - resource-scope
      description: Returns the relationship scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - resource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resource
          collectionFormat: csv
        - name: filter[resource-scope]
          in: query
          description: Filters the collection of resource-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-scope
      description: Creates an item of type resource-scope and adds it to scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /protected-resource-path-mapping:
    get:
      tags:
        - protected-resource-path-mapping
      description: Returns the collection of type protected-resource-path-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[protected-resource-path-mapping]
          in: query
          description: Selects the set of protected-resource-path-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - method
              - path
              - requiredScopes
              - resource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - path
              - requiredScopes
              - resource
          collectionFormat: csv
        - name: filter[protected-resource-path-mapping]
          in: query
          description: Filters the collection of protected-resource-path-mapping using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of protected-resource-path-mapping using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/protected-resource-path-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - protected-resource-path-mapping
      description: Creates an item of type protected-resource-path-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-resource-path-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping'
  /protected-resource-path-mapping/{protected-resource-path-mappingId}:
    get:
      tags:
        - protected-resource-path-mapping
      description: Returns an instance of type protected-resource-path-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[protected-resource-path-mapping]
          in: query
          description: Selects the set of protected-resource-path-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - method
              - path
              - requiredScopes
              - resource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - path
              - requiredScopes
              - resource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - protected-resource-path-mapping
      description: Deletes an instance of type protected-resource-path-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - protected-resource-path-mapping
      description: Modifies an instance of type protected-resource-path-mapping
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-resource-path-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: protected-resource-path-mappingId
        in: path
        description: protected-resource-path-mapping Identifier
        required: true
        type: string
  /generic-resource-alias:
    get:
      tags:
        - generic-resource-alias
      description: Returns the collection of type generic-resource-alias
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - alias
              - '-alias'
              - network
              - '-network'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[generic-resource-alias]
          in: query
          description: Selects the set of generic-resource-alias fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - alias
              - network
              - genericResource
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResource
              - scopes
          collectionFormat: csv
        - name: filter[generic-resource-alias]
          in: query
          description: Filters the collection of generic-resource-alias using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of generic-resource-alias using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/generic-resource-alias'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - generic-resource-alias
      description: Creates an item of type generic-resource-alias
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-alias
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias'
  /generic-resource-alias/{generic-resource-aliasId}:
    get:
      tags:
        - generic-resource-alias
      description: Returns an instance of type generic-resource-alias
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[generic-resource-alias]
          in: query
          description: Selects the set of generic-resource-alias fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - alias
              - network
              - genericResource
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResource
              - scopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - generic-resource-alias
      description: Deletes an instance of type generic-resource-alias
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - generic-resource-alias
      description: Modifies an instance of type generic-resource-alias
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-alias
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: generic-resource-aliasId
        in: path
        description: generic-resource-alias Identifier
        required: true
        type: string
  /protected-http-path:
    get:
      tags:
        - protected-http-path
      description: Returns the collection of type protected-http-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - path
              - '-path'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[protected-http-path]
          in: query
          description: Selects the set of protected-http-path fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - path
              - authServer
              - protectedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authServer
              - protectedResources
          collectionFormat: csv
        - name: filter[protected-http-path]
          in: query
          description: Filters the collection of protected-http-path using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of protected-http-path using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/protected-http-path'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - protected-http-path
      description: Creates an item of type protected-http-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-http-path
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-http-path'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-http-path'
  /protected-http-path/{protected-http-pathId}:
    get:
      tags:
        - protected-http-path
      description: Returns an instance of type protected-http-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[protected-http-path]
          in: query
          description: Selects the set of protected-http-path fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - path
              - authServer
              - protectedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authServer
              - protectedResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-http-path'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - protected-http-path
      description: Deletes an instance of type protected-http-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - protected-http-path
      description: Modifies an instance of type protected-http-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-http-path
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-http-path'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: protected-http-pathId
        in: path
        description: protected-http-path Identifier
        required: true
        type: string
  /protected-resource-path-mapping/{protected-resource-path-mappingId}/requiredScopes:
    get:
      tags:
        - protected-resource-path-mapping-scopes
      description: Returns the relationship requiredScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[protected-resource-path-mapping-scopes]
          in: query
          description: Selects the set of protected-resource-path-mapping-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - pathMapping
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - pathMapping
          collectionFormat: csv
        - name: filter[protected-resource-path-mapping-scopes]
          in: query
          description: Filters the collection of protected-resource-path-mapping-scopes using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/protected-resource-path-mapping-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - protected-resource-path-mapping-scopes
      description: Creates an item of type protected-resource-path-mapping-scopes and adds it to requiredScopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-resource-path-mapping-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping-scopes'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping-scopes'
    parameters:
      - name: protected-resource-path-mappingId
        in: path
        description: protected-resource-path-mapping Identifier
        required: true
        type: string
  /authority-filtering-api-path:
    get:
      tags:
        - authority-filtering-api-path
      description: Returns the collection of type authority-filtering-api-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - api
              - '-api'
              - method
              - '-method'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authority-filtering-api-path]
          in: query
          description: Selects the set of authority-filtering-api-path fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - api
              - method
              - requiredAuthorities
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requiredAuthorities
          collectionFormat: csv
        - name: filter[authority-filtering-api-path]
          in: query
          description: Filters the collection of authority-filtering-api-path using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of authority-filtering-api-path using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authority-filtering-api-path'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authority-filtering-api-path
      description: Creates an item of type authority-filtering-api-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority-filtering-api-path
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority-filtering-api-path'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority-filtering-api-path'
  /authority-filtering-api-path/{authority-filtering-api-pathId}:
    get:
      tags:
        - authority-filtering-api-path
      description: Returns an instance of type authority-filtering-api-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authority-filtering-api-path]
          in: query
          description: Selects the set of authority-filtering-api-path fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - api
              - method
              - requiredAuthorities
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - requiredAuthorities
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority-filtering-api-path'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authority-filtering-api-path
      description: Deletes an instance of type authority-filtering-api-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authority-filtering-api-path
      description: Modifies an instance of type authority-filtering-api-path
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority-filtering-api-path
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority-filtering-api-path'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: authority-filtering-api-pathId
        in: path
        description: authority-filtering-api-path Identifier
        required: true
        type: string
  /generic-resource-authorization-scope:
    get:
      tags:
        - generic-resource-authorization-scope
      description: Returns the collection of type generic-resource-authorization-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizedScope
              - '-authorizedScope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[generic-resource-authorization-scope]
          in: query
          description: Selects the set of generic-resource-authorization-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizedScope
              - genericResourceAuthorization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResourceAuthorization
          collectionFormat: csv
        - name: filter[generic-resource-authorization-scope]
          in: query
          description: Filters the collection of generic-resource-authorization-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of generic-resource-authorization-scope using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/generic-resource-authorization-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - generic-resource-authorization-scope
      description: Creates an item of type generic-resource-authorization-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-authorization-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization-scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization-scope'
  /generic-resource-authorization-scope/{generic-resource-authorization-scopeId}:
    get:
      tags:
        - generic-resource-authorization-scope
      description: Returns an instance of type generic-resource-authorization-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[generic-resource-authorization-scope]
          in: query
          description: Selects the set of generic-resource-authorization-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizedScope
              - genericResourceAuthorization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResourceAuthorization
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - generic-resource-authorization-scope
      description: Deletes an instance of type generic-resource-authorization-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - generic-resource-authorization-scope
      description: Modifies an instance of type generic-resource-authorization-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-authorization-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization-scope'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: generic-resource-authorization-scopeId
        in: path
        description: generic-resource-authorization-scope Identifier
        required: true
        type: string
  /generic-resource-content-type:
    get:
      tags:
        - generic-resource-content-type
      description: Returns the collection of type generic-resource-content-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - contentTypeUri
              - '-contentTypeUri'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[generic-resource-content-type]
          in: query
          description: Selects the set of generic-resource-content-type fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - contentTypeUri
              - genericResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResource
          collectionFormat: csv
        - name: filter[generic-resource-content-type]
          in: query
          description: Filters the collection of generic-resource-content-type using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of generic-resource-content-type using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/generic-resource-content-type'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - generic-resource-content-type
      description: Creates an item of type generic-resource-content-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-content-type
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-content-type'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-content-type'
  /generic-resource-content-type/{generic-resource-content-typeId}:
    get:
      tags:
        - generic-resource-content-type
      description: Returns an instance of type generic-resource-content-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[generic-resource-content-type]
          in: query
          description: Selects the set of generic-resource-content-type fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - contentTypeUri
              - genericResource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-content-type'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - generic-resource-content-type
      description: Deletes an instance of type generic-resource-content-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - generic-resource-content-type
      description: Modifies an instance of type generic-resource-content-type
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-content-type
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-content-type'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: generic-resource-content-typeId
        in: path
        description: generic-resource-content-type Identifier
        required: true
        type: string
  /authority-claim-filter-config:
    get:
      tags:
        - authority-claim-filter-config
      description: Returns the collection of type authority-claim-filter-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - incomingClaimName
              - '-incomingClaimName'
              - outgoingClaimName
              - '-outgoingClaimName'
              - priority
              - '-priority'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authority-claim-filter-config]
          in: query
          description: Selects the set of authority-claim-filter-config fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - incomingClaimName
              - outgoingClaimName
              - priority
              - authority
              - authorityFilteringApiPath
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authority
              - authorityFilteringApiPath
          collectionFormat: csv
        - name: filter[authority-claim-filter-config]
          in: query
          description: Filters the collection of authority-claim-filter-config using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of authority-claim-filter-config using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authority-claim-filter-config'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authority-claim-filter-config
      description: Creates an item of type authority-claim-filter-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority-claim-filter-config
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority-claim-filter-config'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority-claim-filter-config'
  /authority-claim-filter-config/{authority-claim-filter-configId}:
    get:
      tags:
        - authority-claim-filter-config
      description: Returns an instance of type authority-claim-filter-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authority-claim-filter-config]
          in: query
          description: Selects the set of authority-claim-filter-config fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - incomingClaimName
              - outgoingClaimName
              - priority
              - authority
              - authorityFilteringApiPath
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authority
              - authorityFilteringApiPath
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority-claim-filter-config'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authority-claim-filter-config
      description: Deletes an instance of type authority-claim-filter-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authority-claim-filter-config
      description: Modifies an instance of type authority-claim-filter-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority-claim-filter-config
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority-claim-filter-config'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: authority-claim-filter-configId
        in: path
        description: authority-claim-filter-config Identifier
        required: true
        type: string
  /oauth-provider:
    get:
      tags:
        - oauth-provider
      description: Returns the collection of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientId
              - '-clientId'
              - clientSecret
              - '-clientSecret'
              - defaultPrompt
              - '-defaultPrompt'
              - defaultScopes
              - '-defaultScopes'
              - issuerUri
              - '-issuerUri'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - metaDataRaw
              - '-metaDataRaw'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - defaultPrompt
              - defaultScopes
              - issuerUri
              - jwksRaw
              - jwksUri
              - metaDataRaw
              - name
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-provider]
          in: query
          description: Filters the collection of oauth-provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-provider using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-provider
      description: Creates an item of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
  /oauth-provider/{oauth-providerId}:
    get:
      tags:
        - oauth-provider
      description: Returns an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-provider]
          in: query
          description: Selects the set of oauth-provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - additionalRequestParams
              - clientAuthenticationMethod
              - clientId
              - clientSecret
              - defaultPrompt
              - defaultScopes
              - issuerUri
              - jwksRaw
              - jwksUri
              - metaDataRaw
              - name
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-provider
      description: Deletes an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-provider
      description: Modifies an instance of type oauth-provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-provider'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: oauth-providerId
        in: path
        description: oauth-provider Identifier
        required: true
        type: string
  /oauth-client/{oauth-clientId}/oAuthClientMetaData:
    get:
      tags:
        - oauth-client-metadata
      description: Returns the relationship oAuthClientMetaData
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientSecret
              - '-clientSecret'
              - grantTypes
              - '-grantTypes'
              - issuerUri
              - '-issuerUri'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - metaDataRaw
              - '-metaDataRaw'
              - scopes
              - '-scopes'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - clientSecret
              - clientType
              - grantTypes
              - issuerUri
              - jwksRaw
              - jwksUri
              - metaDataRaw
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-client-metadata]
          in: query
          description: Filters the collection of oauth-client-metadata using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client-metadata
      description: Creates an item of type oauth-client-metadata and adds it to oAuthClientMetaData
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
    parameters:
      - name: oauth-clientId
        in: path
        description: oauth-client Identifier
        required: true
        type: string
  /protected-http-path/{protected-http-pathId}/protectedResources:
    get:
      tags:
        - protected-resource-path-mapping
      description: Returns the relationship protectedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[protected-resource-path-mapping]
          in: query
          description: Selects the set of protected-resource-path-mapping fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - method
              - path
              - requiredScopes
              - resource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - path
              - requiredScopes
              - resource
          collectionFormat: csv
        - name: filter[protected-resource-path-mapping]
          in: query
          description: Filters the collection of protected-resource-path-mapping using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/protected-resource-path-mapping'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - protected-resource-path-mapping
      description: Creates an item of type protected-resource-path-mapping and adds it to protectedResources
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-resource-path-mapping
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping'
    parameters:
      - name: protected-http-pathId
        in: path
        description: protected-http-path Identifier
        required: true
        type: string
  /generic-resource:
    get:
      tags:
        - generic-resource
      description: Returns the collection of type generic-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - location
              - '-location'
              - ownerId
              - '-ownerId'
              - ownerName
              - '-ownerName'
              - protectionUri
              - '-protectionUri'
              - resourceId
              - '-resourceId'
              - type
              - '-type'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[generic-resource]
          in: query
          description: Selects the set of generic-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - location
              - ownerId
              - ownerName
              - protectionUri
              - resourceId
              - type
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[generic-resource]
          in: query
          description: Filters the collection of generic-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of generic-resource using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/generic-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - generic-resource
      description: Creates an item of type generic-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource'
  /generic-resource/{generic-resourceId}:
    get:
      tags:
        - generic-resource
      description: Returns an instance of type generic-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[generic-resource]
          in: query
          description: Selects the set of generic-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - location
              - ownerId
              - ownerName
              - protectionUri
              - resourceId
              - type
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - generic-resource
      description: Deletes an instance of type generic-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - generic-resource
      description: Modifies an instance of type generic-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: generic-resourceId
        in: path
        description: generic-resource Identifier
        required: true
        type: string
  /oauth-client-metadata:
    get:
      tags:
        - oauth-client-metadata
      description: Returns the collection of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - '-clientAuthenticationMethod'
              - clientSecret
              - '-clientSecret'
              - grantTypes
              - '-grantTypes'
              - issuerUri
              - '-issuerUri'
              - jwksRaw
              - '-jwksRaw'
              - jwksUri
              - '-jwksUri'
              - metaDataRaw
              - '-metaDataRaw'
              - scopes
              - '-scopes'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - clientSecret
              - clientType
              - grantTypes
              - issuerUri
              - jwksRaw
              - jwksUri
              - metaDataRaw
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[oauth-client-metadata]
          in: query
          description: Filters the collection of oauth-client-metadata using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of oauth-client-metadata using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - oauth-client-metadata
      description: Creates an item of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
  /oauth-client-metadata/{oauth-client-metadataId}:
    get:
      tags:
        - oauth-client-metadata
      description: Returns an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[oauth-client-metadata]
          in: query
          description: Selects the set of oauth-client-metadata fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - clientAuthenticationMethod
              - clientSecret
              - clientType
              - grantTypes
              - issuerUri
              - jwksRaw
              - jwksUri
              - metaDataRaw
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - oauth-client-metadata
      description: Deletes an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - oauth-client-metadata
      description: Modifies an instance of type oauth-client-metadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: oauth-client-metadata
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/oauth-client-metadata'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: oauth-client-metadataId
        in: path
        description: oauth-client-metadata Identifier
        required: true
        type: string
  /capability-ticket-resource:
    get:
      tags:
        - capability-ticket-resource
      description: Returns the collection of type capability-ticket-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceType
              - '-resourceType'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[capability-ticket-resource]
          in: query
          description: Selects the set of capability-ticket-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceType
              - scopes
              - capabilityTicket
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
          collectionFormat: csv
        - name: filter[capability-ticket-resource]
          in: query
          description: Filters the collection of capability-ticket-resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of capability-ticket-resource using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/capability-ticket-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - capability-ticket-resource
      description: Creates an item of type capability-ticket-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket-resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket-resource'
  /capability-ticket-resource/{capability-ticket-resourceId}:
    get:
      tags:
        - capability-ticket-resource
      description: Returns an instance of type capability-ticket-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[capability-ticket-resource]
          in: query
          description: Selects the set of capability-ticket-resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resourceType
              - scopes
              - capabilityTicket
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - capabilityTicket
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket-resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - capability-ticket-resource
      description: Deletes an instance of type capability-ticket-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - capability-ticket-resource
      description: Modifies an instance of type capability-ticket-resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket-resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket-resource'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: capability-ticket-resourceId
        in: path
        description: capability-ticket-resource Identifier
        required: true
        type: string
  /generic-resource-alias-scope:
    get:
      tags:
        - generic-resource-alias-scope
      description: Returns the collection of type generic-resource-alias-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[generic-resource-alias-scope]
          in: query
          description: Selects the set of generic-resource-alias-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - genericResourceAlias
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResourceAlias
          collectionFormat: csv
        - name: filter[generic-resource-alias-scope]
          in: query
          description: Filters the collection of generic-resource-alias-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of generic-resource-alias-scope using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/generic-resource-alias-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - generic-resource-alias-scope
      description: Creates an item of type generic-resource-alias-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-alias-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias-scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias-scope'
  /generic-resource-alias-scope/{generic-resource-alias-scopeId}:
    get:
      tags:
        - generic-resource-alias-scope
      description: Returns an instance of type generic-resource-alias-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[generic-resource-alias-scope]
          in: query
          description: Selects the set of generic-resource-alias-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - genericResourceAlias
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResourceAlias
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - generic-resource-alias-scope
      description: Deletes an instance of type generic-resource-alias-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - generic-resource-alias-scope
      description: Modifies an instance of type generic-resource-alias-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-alias-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-alias-scope'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: generic-resource-alias-scopeId
        in: path
        description: generic-resource-alias-scope Identifier
        required: true
        type: string
  /resource:
    get:
      tags:
        - resource
      description: Returns the collection of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - iconUri
              - '-iconUri'
              - name
              - '-name'
              - resourceId
              - '-resourceId'
              - type
              - '-type'
              - userId
              - '-userId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource]
          in: query
          description: Selects the set of resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - iconUri
              - name
              - resourceId
              - type
              - userId
              - authServer
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authServer
              - scopes
          collectionFormat: csv
        - name: filter[resource]
          in: query
          description: Filters the collection of resource using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource
      description: Creates an item of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource'
  /resource/{resourceId}:
    get:
      tags:
        - resource
      description: Returns an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource]
          in: query
          description: Selects the set of resource fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - iconUri
              - name
              - resourceId
              - type
              - userId
              - authServer
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authServer
              - scopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource
      description: Deletes an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource
      description: Modifies an instance of type resource
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: resourceId
        in: path
        description: resource Identifier
        required: true
        type: string
  /user-restriction:
    get:
      tags:
        - user-restriction
      description: Returns the collection of type user-restriction
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - claim
              - '-claim'
              - claimFormat
              - '-claimFormat'
              - errorMessage
              - '-errorMessage'
              - restrictionType
              - '-restrictionType'
              - value
              - '-value'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[user-restriction]
          in: query
          description: Selects the set of user-restriction fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - claim
              - claimFormat
              - errorMessage
              - restrictionType
              - value
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
        - name: filter[user-restriction]
          in: query
          description: Filters the collection of user-restriction using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of user-restriction using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/user-restriction'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - user-restriction
      description: Creates an item of type user-restriction
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: user-restriction
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/user-restriction'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/user-restriction'
  /user-restriction/{user-restrictionId}:
    get:
      tags:
        - user-restriction
      description: Returns an instance of type user-restriction
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[user-restriction]
          in: query
          description: Selects the set of user-restriction fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - claim
              - claimFormat
              - errorMessage
              - restrictionType
              - value
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum: []
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/user-restriction'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - user-restriction
      description: Deletes an instance of type user-restriction
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - user-restriction
      description: Modifies an instance of type user-restriction
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: user-restriction
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/user-restriction'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: user-restrictionId
        in: path
        description: user-restriction Identifier
        required: true
        type: string
  /authority-claim-combiner-config:
    get:
      tags:
        - authority-claim-combiner-config
      description: Returns the collection of type authority-claim-combiner-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - claimKey
              - '-claimKey'
              - claimLiteral
              - '-claimLiteral'
              - outgoingClaimName
              - '-outgoingClaimName'
              - priority
              - '-priority'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[authority-claim-combiner-config]
          in: query
          description: Selects the set of authority-claim-combiner-config fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - claimKey
              - claimLiteral
              - outgoingClaimName
              - priority
              - authorityFilteringApiPath
              - requiredAuthority
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityFilteringApiPath
              - requiredAuthority
          collectionFormat: csv
        - name: filter[authority-claim-combiner-config]
          in: query
          description: Filters the collection of authority-claim-combiner-config using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of authority-claim-combiner-config using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/authority-claim-combiner-config'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - authority-claim-combiner-config
      description: Creates an item of type authority-claim-combiner-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority-claim-combiner-config
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority-claim-combiner-config'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority-claim-combiner-config'
  /authority-claim-combiner-config/{authority-claim-combiner-configId}:
    get:
      tags:
        - authority-claim-combiner-config
      description: Returns an instance of type authority-claim-combiner-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[authority-claim-combiner-config]
          in: query
          description: Selects the set of authority-claim-combiner-config fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - claimKey
              - claimLiteral
              - outgoingClaimName
              - priority
              - authorityFilteringApiPath
              - requiredAuthority
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorityFilteringApiPath
              - requiredAuthority
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/authority-claim-combiner-config'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - authority-claim-combiner-config
      description: Deletes an instance of type authority-claim-combiner-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - authority-claim-combiner-config
      description: Modifies an instance of type authority-claim-combiner-config
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: authority-claim-combiner-config
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/authority-claim-combiner-config'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: authority-claim-combiner-configId
        in: path
        description: authority-claim-combiner-config Identifier
        required: true
        type: string
  /resource-scope:
    get:
      tags:
        - resource-scope
      description: Returns the collection of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - resource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resource
          collectionFormat: csv
        - name: filter[resource-scope]
          in: query
          description: Filters the collection of resource-scope using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of resource-scope using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - resource-scope
      description: Creates an item of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
  /resource-scope/{resource-scopeId}:
    get:
      tags:
        - resource-scope
      description: Returns an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[resource-scope]
          in: query
          description: Selects the set of resource-scope fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - resource
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - resource
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/resource-scope'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - resource-scope
      description: Deletes an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - resource-scope
      description: Modifies an instance of type resource-scope
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: resource-scope
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/resource-scope'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: resource-scopeId
        in: path
        description: resource-scope Identifier
        required: true
        type: string
  /capability-ticket:
    get:
      tags:
        - capability-ticket
      description: Returns the collection of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - '-name'
              - redirectUri
              - '-redirectUri'
              - ticketId
              - '-ticketId'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - redirectUri
              - ticketId
              - provider
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - provider
              - requestedResources
          collectionFormat: csv
        - name: filter[capability-ticket]
          in: query
          description: Filters the collection of capability-ticket using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of capability-ticket using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - capability-ticket
      description: Creates an item of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
  /capability-ticket/{capability-ticketId}:
    get:
      tags:
        - capability-ticket
      description: Returns an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[capability-ticket]
          in: query
          description: Selects the set of capability-ticket fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - redirectUri
              - ticketId
              - provider
              - requestedResources
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - provider
              - requestedResources
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - capability-ticket
      description: Deletes an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - capability-ticket
      description: Modifies an instance of type capability-ticket
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: capability-ticket
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/capability-ticket'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: capability-ticketId
        in: path
        description: capability-ticket Identifier
        required: true
        type: string
  /protected-resource-path-mapping-scopes:
    get:
      tags:
        - protected-resource-path-mapping-scopes
      description: Returns the collection of type protected-resource-path-mapping-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - '-scope'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[protected-resource-path-mapping-scopes]
          in: query
          description: Selects the set of protected-resource-path-mapping-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - pathMapping
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - pathMapping
          collectionFormat: csv
        - name: filter[protected-resource-path-mapping-scopes]
          in: query
          description: Filters the collection of protected-resource-path-mapping-scopes using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of protected-resource-path-mapping-scopes using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/protected-resource-path-mapping-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - protected-resource-path-mapping-scopes
      description: Creates an item of type protected-resource-path-mapping-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-resource-path-mapping-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping-scopes'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping-scopes'
  /protected-resource-path-mapping-scopes/{protected-resource-path-mapping-scopesId}:
    get:
      tags:
        - protected-resource-path-mapping-scopes
      description: Returns an instance of type protected-resource-path-mapping-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[protected-resource-path-mapping-scopes]
          in: query
          description: Selects the set of protected-resource-path-mapping-scopes fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - scope
              - pathMapping
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - pathMapping
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping-scopes'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - protected-resource-path-mapping-scopes
      description: Deletes an instance of type protected-resource-path-mapping-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - protected-resource-path-mapping-scopes
      description: Modifies an instance of type protected-resource-path-mapping-scopes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: protected-resource-path-mapping-scopes
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/protected-resource-path-mapping-scopes'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: protected-resource-path-mapping-scopesId
        in: path
        description: protected-resource-path-mapping-scopes Identifier
        required: true
        type: string
  /generic-resource-authorization:
    get:
      tags:
        - generic-resource-authorization
      description: Returns the collection of type generic-resource-authorization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizedParty
              - '-authorizedParty'
              - authorizedPartyName
              - '-authorizedPartyName'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[generic-resource-authorization]
          in: query
          description: Selects the set of generic-resource-authorization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizedParty
              - authorizedPartyName
              - disabledOn
              - genericResourceAlias
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResourceAlias
              - scopes
          collectionFormat: csv
        - name: filter[generic-resource-authorization]
          in: query
          description: Filters the collection of generic-resource-authorization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of generic-resource-authorization using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/generic-resource-authorization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - generic-resource-authorization
      description: Creates an item of type generic-resource-authorization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-authorization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization'
  /generic-resource-authorization/{generic-resource-authorizationId}:
    get:
      tags:
        - generic-resource-authorization
      description: Returns an instance of type generic-resource-authorization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[generic-resource-authorization]
          in: query
          description: Selects the set of generic-resource-authorization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - authorizedParty
              - authorizedPartyName
              - disabledOn
              - genericResourceAlias
              - scopes
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - genericResourceAlias
              - scopes
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - generic-resource-authorization
      description: Deletes an instance of type generic-resource-authorization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - generic-resource-authorization
      description: Modifies an instance of type generic-resource-authorization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: generic-resource-authorization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/generic-resource-authorization'
      responses:
        '200':
          description: Successful response
    parameters:
      - name: generic-resource-authorizationId
        in: path
        description: generic-resource-authorization Identifier
        required: true
        type: string
definitions:
  api-filter-advice-mapping:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          filterType:
            type: string
          orderPriority:
            type: integer
            format: int32
      relationships:
        type: object
        properties:
          authorityFilteringApiPath:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authority-filtering-api-path
  authority:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          authorityValue:
            type: string
      relationships:
        type: object
  authority-claim-combiner-config:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          claimKey:
            type: string
          claimLiteral:
            type: string
          outgoingClaimName:
            type: string
          priority:
            type: integer
            format: int32
      relationships:
        type: object
        properties:
          authorityFilteringApiPath:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authority-filtering-api-path
          requiredAuthority:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authority
  authority-claim-filter-config:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          incomingClaimName:
            type: string
          outgoingClaimName:
            type: string
          priority:
            type: integer
            format: int32
      relationships:
        type: object
        properties:
          authority:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authority
          authorityFilteringApiPath:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authority-filtering-api-path
  authority-filtering-api-path:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          api:
            type: string
          method:
            type: string
      relationships:
        type: object
        properties:
          requiredAuthorities:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - authority
  capability-ticket:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          name:
            type: string
          redirectUri:
            type: string
          ticketId:
            type: string
      relationships:
        type: object
        properties:
          provider:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
          requestedResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - capability-ticket-resource
  capability-ticket-resource:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          resourceType:
            type: string
          scopes:
            type: array
            items:
              type: object
      relationships:
        type: object
        properties:
          capabilityTicket:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - capability-ticket
  generic-resource:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          description:
            type: string
          location:
            type: string
          ownerId:
            type: string
          ownerName:
            type: string
          protectionUri:
            type: string
          resourceId:
            type: string
          type:
            type: string
      relationships:
        type: object
  generic-resource-alias:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          alias:
            type: string
          network:
            type: string
      relationships:
        type: object
        properties:
          genericResource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource
          scopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource-alias-scope
  generic-resource-alias-scope:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          scope:
            type: string
      relationships:
        type: object
        properties:
          genericResourceAlias:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource-alias
  generic-resource-authorization:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          authorizedParty:
            type: string
          authorizedPartyName:
            type: string
          disabledOn:
            type: string
            format: date-time
      relationships:
        type: object
        properties:
          genericResourceAlias:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource-alias
          scopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource-authorization-scope
  generic-resource-authorization-scope:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          authorizedScope:
            type: string
      relationships:
        type: object
        properties:
          genericResourceAuthorization:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource-authorization
  generic-resource-content-type:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          contentTypeUri:
            type: string
      relationships:
        type: object
        properties:
          genericResource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - generic-resource
  oauth-client:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          clientId:
            type: string
          clientName:
            type: string
          redirectUris:
            type: array
            uniqueItems: true
            items:
              type: object
      relationships:
        type: object
        properties:
          oAuthClientMetaData:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-client-metadata
  oauth-client-metadata:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          clientAuthenticationMethod:
            type: string
          clientSecret:
            type: string
          clientType:
            type: string
            enum:
              - CONFIDENTIAL
              - PUBLIC
          grantTypes:
            type: string
          issuerUri:
            type: string
          jwksRaw:
            type: string
          jwksUri:
            type: string
          metaDataRaw:
            type: string
          scopes:
            type: string
      relationships:
        type: object
  oauth-provider:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          additionalRequestParams:
            type: object
            additionalProperties:
              type: object
          clientAuthenticationMethod:
            type: string
          clientId:
            type: string
          clientSecret:
            type: string
          defaultPrompt:
            type: string
          defaultScopes:
            type: string
          issuerUri:
            type: string
          jwksRaw:
            type: string
          jwksUri:
            type: string
          metaDataRaw:
            type: string
          name:
            type: string
      relationships:
        type: object
  protected-http-path:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          path:
            type: string
      relationships:
        type: object
        properties:
          authServer:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
          protectedResources:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - protected-resource-path-mapping
  protected-resource-path-mapping:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          method:
            type: string
            enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
              - TRACE
      relationships:
        type: object
        properties:
          path:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - protected-http-path
          requiredScopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - protected-resource-path-mapping-scopes
          resource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource
  protected-resource-path-mapping-scopes:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          scope:
            type: string
      relationships:
        type: object
        properties:
          pathMapping:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - protected-resource-path-mapping
  resource:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          description:
            type: string
          iconUri:
            type: string
          name:
            type: string
          resourceId:
            type: string
          type:
            type: string
          userId:
            type: string
      relationships:
        type: object
        properties:
          authServer:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - oauth-provider
          scopes:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource-scope
  resource-scope:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          scope:
            type: string
      relationships:
        type: object
        properties:
          resource:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - resource
  resource-authority-mapping:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          authorityString:
            type: string
      relationships:
        type: object
  user-restriction:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          claim:
            type: string
          claimFormat:
            type: string
          errorMessage:
            type: string
          restrictionType:
            type: string
          value:
            type: string
      relationships:
        type: object
